{"version":3,"sources":["components/TeamListItem.js","components/TeamListHeader.js","components/TeamSeasonsListHeader.js","components/TeamSeasonListItem.js","components/List.js","containers/IndexContainer.js","components/PlayerBio.js","components/PlayerStatHeader.js","components/PlayerAvgHeader.js","components/PlayerStatItem.js","components/SeasonAvgItem.js","containers/PlayerStatList.js","containers/PlayerShowContainer.js","components/ComparePlayerListItem.js","components/ComparePlayerSeasons.js","components/CompareInput.js","components/CompareCard.js","components/CompareBio.js","components/CompareStatRow.js","components/CompareStats.js","components/CompareAvgStats.js","containers/CompareContainer.js","containers/HomeContainer.js","components/TeamRosterListHeader.js","components/TeamRosterAvgHeader.js","components/TeamRosterListItem.js","components/TeamRosterAvgItem.js","components/TeamBio.js","containers/TeamRosterContainer.js","components/SearchBar.js","components/PlayerListItem.js","containers/PlayerList.js","containers/PlayersContainer.js","components/CompareTeamBio.js","components/CompareTeamListItem.js","components/CompareTeamSeason.js","components/CompareTeamCard.js","components/CompareTeamStats.js","components/CompareTeamAvg.js","containers/CompareTeamsContainer.js","components/SimTeamBio.js","containers/SimulateContainer.js","components/Loader.js","components/BoxScoreLine.js","components/TeamBoxScore.js","components/SimBoxScore.js","containers/SimResultContainer.js","containers/ShowTeams.js","containers/MainContainer.js","components/NavBar.js","containers/NavContainer.js","App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["TeamListItem","props","team","to","id","className","src","logo","alt","full_name","TeamListHeader","TeamSeasonsListHeader","TeamSeasonListItem","season","year","List","renderListHeader","renderListItems","this","teams","map","key","seasons","Component","IndexContainer","withRouter","PlayerBio","player","renderTeamLogos","first_name","last_name","position","height_feet","height_inches","weight_pounds","PlayerStatHeader","PlayerAvgHeader","PlayerStatItem","stat","gp","fgm","fga","fg3m","fg3a","ftm","fta","oreb","dreb","reb","ast","stl","blk","turnover","pf","pts","SeasonAvgItem","Math","round","PlayerStatList","state","stats","fetch","playerId","then","r","json","setState","sort","a","b","renderAvgItems","PlayerShowContainer","ComparePlayerListItem","handleClick","handlePlayerClick","onClick","ComparePlayerSeasons","handleSeasonClick","CompareInput","handleKeyDown","event","placeholder","onKeyDown","CompareCard","displayPlayers","selectedPlayer","selectedPlayerSeasons","input","target","value","players","filter","toLowerCase","includes","setPlayer1","setPlayer2","renderPlayers","renderPlayerSeasons","connect","CompareBio","seasonStat","CompareStatRow","statclass1","stat1","statclass2","stat2","CompareStats","player1stats","player2stats","num","CompareContainer","player1","player2","CompareAvgStats","HomeContainer","style","color","background","TeamRosterListHeader","TeamRosterAvgHeader","TeamRosterListItem","TeamRosterAvgItem","TeamBio","conference","division","TeamRosterContainer","rosterStats","teamId","seasonId","SearchBar","onChange","PlayerListItem","PlayerList","PlayersContainer","filterPlayers","class","CompareTeamBio","resetTeam1","resetTeam2","width","height","roster","length","CompareTeamListItem","handleTeamClick","CompareTeamSeason","team_id","CompareTeamCard","selectedTeam","res","setTeam1","setTeam2","renderTeams","renderTeamSeasons","CompareTeamStats","team1roster","team2roster","fga1","fgm1","fg3a1","fg3m1","fta1","ftm1","oreb1","dreb1","reb1","ast1","stl1","blk1","turnover1","pf1","pts1","fga2","fgm2","fg3a2","fg3m2","fta2","ftm2","oreb2","dreb2","reb2","ast2","stl2","blk2","turnover2","pf2","pts2","forEach","CompareTeamAvg","games1","games2","ptsPerGame1","fgmPerGame1","fgaPerGame1","fgp1","fg3mPerGame1","fg3aPerGame1","fg3p1","ftmPerGame1","ftaPerGame1","ftp1","orebPerGame1","drebPerGame1","rebPerGame1","astPerGame1","stlPerGame1","blkPerGame1","toPerGame1","pfPerGame1","ptsPerGame2","fgmPerGame2","fgaPerGame2","fgp2","fg3mPerGame2","fg3aPerGame2","fg3p2","ftmPerGame2","ftaPerGame2","ftp2","orebPerGame2","drebPerGame2","rebPerGame2","astPerGame2","stlPerGame2","blkPerGame2","toPerGame2","pfPerGame2","CompareTeamsContainer","team1","team2","teamRoster","SimulateContainer","size","margin","Loader","BoxScoreLine","sim","fg2a","fg2m","TeamBoxScore","teamStats","renderScoreLine","teamtotal","teamfg2a","teamfg2m","teamfg3a","teamfg3m","teamfta","teamftm","teamoreb","teamdreb","teamast","teamstl","teamblk","teamto","SimBoxScore","team1total","team2total","SimResultContainer","loaded","season1","season2","ok","Error","statusText","console","log","ShowTeams","east","west","renderEast","renderWest","MainContainer","renderSimResults","renderParams","season1id","parseInt","match","params","teamone","season2id","teamtwo","renderTeamYears","find","renderPlayer","renderTeamRoster","exact","path","NavBar","NavContainer","App","componentDidMount","rawData","populateTeams","moreData","populatePlayers","Fragment","Spinner","animation","variant","React","dispatch","type","Boolean","window","location","hostname","initialState","reducer","oldState","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gVAqBeA,EAlBM,SAACC,GAAW,IAErBC,EAASD,EAATC,KAER,OACI,oCACA,6BACA,kBAAC,IAAD,CAASC,GAAI,UAAYD,EAAKE,IAC1B,yBAAKC,UAAU,QACX,yBAAKA,UAAU,OAAOC,IAAKJ,EAAKK,KAAMC,IAAKN,EAAKO,cAGxD,+BCFOC,EAXQ,WACnB,OACI,4BACI,yCACA,mCACA,0CACA,0CCEGC,EARe,WAC1B,OACI,4BACI,wCCgBGC,EAlBY,SAACX,GAAW,IAE3BY,EAAWZ,EAAXY,OACAX,EAASD,EAATC,KAER,OAEI,oCACI,4BACI,4BACI,kBAAC,IAAD,CAASC,GAAI,UAAYD,EAAKE,GAAK,IAAMS,EAAOC,MAAQD,EAAOC,UC8BpEC,EArCf,iLAEc,IAEFC,EACAC,EAHC,OAaL,OARIC,KAAKjB,MAAMkB,OACXH,EAAmB,kBAAC,EAAD,MACnBC,EAAkBC,KAAKjB,MAAMkB,MAAMC,KAAI,SAAAlB,GAAI,OAAI,kBAAC,EAAD,CAAcmB,IAAKnB,EAAKE,GAAIF,KAAMA,QAC1EgB,KAAKjB,MAAMC,OAClBc,EAAmB,kBAAC,EAAD,MACnBC,EAAkBC,KAAKjB,MAAMC,KAAKoB,QAAQF,KAAI,SAAAP,GAAM,OAAI,kBAAC,EAAD,CAAoBQ,IAAKR,EAAOT,GAAIS,OAAQA,EAAQX,KAAM,EAAKD,MAAMC,WAI7H,yBAAKG,UAAU,wBACX,yBAAKA,UAAU,WAGf,yBAAKA,UAAU,UACX,yBAAKA,UAAU,+BACX,+BACKW,EACAC,KAIb,yBAAKZ,UAAU,gBA5B/B,GAA0BkB,aCFbC,EAAb,iLAGQ,OACI,yBAAKnB,UAAU,+BACX,kBAAC,EAAD,CAAMH,KAAMgB,KAAKjB,MAAMC,KAAMiB,MAAOD,KAAKjB,MAAMkB,aAL/D,GAAoCI,aAWrBE,cAAWD,GCeXE,EA5BG,SAACzB,GAAW,IAElB0B,EAAW1B,EAAX0B,OAGJC,EAFc3B,EAAVkB,MAEoBC,KAAI,SAAAlB,GAAI,OAAI,yBAAKG,UAAU,gBAAgBC,IAAKJ,EAAKK,KAAMC,IAAKN,EAAKO,eAEjG,OACI,yBAAKJ,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,aACTsB,EAAOE,WADZ,IACyBF,EAAOG,UAC5B,yBAAKzB,UAAU,cAAf,aAAuCsB,EAAOI,UAC9C,yBAAK1B,UAAU,cAAf,WAAqCsB,EAAOK,YAA5C,IAA0DL,EAAOM,cAAjE,KACA,yBAAK5B,UAAU,cAAf,WAAqCsB,EAAOO,iBAGpD,yBAAK7B,UAAU,qBACX,yBAAKA,UAAU,kBACVuB,OCOVO,EA3BU,WACrB,OACI,+BACI,wBAAI9B,UAAU,kBACV,oCACA,oCACA,kCACA,kCACA,mCACA,kCACA,mCACA,kCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,kCACA,kCACA,sCCSD+B,EA9BS,WACpB,OACI,+BACI,wBAAI/B,UAAU,kBACV,oCACA,oCACA,kCACA,kCACA,mCACA,mCACA,kCACA,mCACA,mCACA,kCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,kCACA,kCACA,sCCIDgC,EA5BQ,SAACpC,GAAW,IAEvBqC,EAASrC,EAATqC,KAER,OACI,wBAAIjC,UAAU,kBACV,4BAAKiC,EAAKzB,OAAOC,MACjB,4BAAKwB,EAAKzB,OAAOX,KAAKO,WACtB,4BAAK6B,EAAKC,IACV,4BAAKD,EAAKE,KACV,4BAAKF,EAAKG,KACV,4BAAKH,EAAKI,MACV,4BAAKJ,EAAKK,MACV,4BAAKL,EAAKM,KACV,4BAAKN,EAAKO,KACV,4BAAKP,EAAKQ,MACV,4BAAKR,EAAKS,MACV,4BAAKT,EAAKU,KACV,4BAAKV,EAAKW,KACV,4BAAKX,EAAKY,KACV,4BAAKZ,EAAKa,KACV,4BAAKb,EAAKc,UACV,4BAAKd,EAAKe,IACV,4BAAKf,EAAKgB,OCQPC,EA/BO,SAACtD,GAAW,IAEtBqC,EAASrC,EAATqC,KAER,OACI,wBAAIjC,UAAU,kBACV,4BAAKiC,EAAKzB,OAAOC,MACjB,4BAAKwB,EAAKzB,OAAOX,KAAKO,WACtB,4BAAK6B,EAAKC,IACV,4BAAKiB,KAAKC,MAAOnB,EAAKE,IAAIF,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKG,IAAIH,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKE,IAAIF,EAAKG,IAAO,KAAM,KAC5C,4BAAKe,KAAKC,MAAOnB,EAAKI,KAAKJ,EAAKC,GAAM,IAAI,IAC1C,4BAAKiB,KAAKC,MAAOnB,EAAKK,KAAKL,EAAKC,GAAM,IAAI,IAC1C,4BAAKiB,KAAKC,MAAOnB,EAAKI,KAAKJ,EAAKK,KAAQ,KAAM,KAC9C,4BAAKa,KAAKC,MAAOnB,EAAKM,IAAIN,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKO,IAAIP,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKM,IAAIN,EAAKO,IAAO,KAAM,KAC5C,4BAAKW,KAAKC,MAAOnB,EAAKQ,KAAKR,EAAKC,GAAM,IAAI,IAC1C,4BAAKiB,KAAKC,MAAOnB,EAAKS,KAAKT,EAAKC,GAAM,IAAI,IAC1C,4BAAKiB,KAAKC,MAAOnB,EAAKU,IAAIV,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKW,IAAIX,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKY,IAAIZ,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKa,IAAIb,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKc,SAASd,EAAKC,GAAM,IAAI,IAC9C,4BAAKiB,KAAKC,MAAOnB,EAAKe,GAAGf,EAAKC,GAAM,IAAI,IACxC,4BAAKiB,KAAKC,MAAOnB,EAAKgB,IAAIhB,EAAKC,GAAM,IAAI,MCoBtCmB,EA1Cf,2MAEIC,MAAQ,CACJC,MAAO,IAHf,mFAMwB,IAAD,OACfC,MAAM,8CAAD,OAA+C3C,KAAKjB,MAAM6D,SAA1D,WACJC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAH,GACF,EAAKM,SAAS,CACVN,MAAOA,EAAMO,MAAK,SAASC,EAAGC,GAAG,OAAOD,EAAEvD,OAAOC,KAAOuD,EAAExD,OAAOC,eAXjF,+BAkBQ,IAAIG,EAAkBC,KAAKyC,MAAMC,MAAMxC,KAAI,SAAAkB,GAAI,OAAI,kBAAC,EAAD,CAAgBjB,IAAKiB,EAAKlC,GAAIkC,KAAMA,OACnFgC,EAAiBpD,KAAKyC,MAAMC,MAAMxC,KAAI,SAAAkB,GAAI,OAAI,kBAAC,EAAD,CAAejB,IAAKiB,EAAKlC,GAAIkC,KAAMA,OAErF,OACI,yBAAKjC,UAAU,+BACX,iDACA,2BAAOA,UAAU,4CACb,kBAAC,EAAD,MACA,+BACCiE,IAGL,6CACA,2BAAOjE,UAAU,4CACb,kBAAC,EAAD,MACA,+BACCY,SAlCrB,GAAoCM,aCiCrBgD,EAnCf,2MAEIZ,MAAQ,CACJhC,OAAQ,GACRR,MAAO,IAJf,oFAOyB,IAAD,OAChB0C,MAAM,8CAAD,OAA+C3C,KAAKjB,MAAM6D,WAC9DC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAApC,GACF,EAAKuC,SAAS,CACVvC,OAAQA,OAGhBkC,MAAM,8CAAD,OAA+C3C,KAAKjB,MAAM6D,SAA1D,WACJC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAA5C,GACF,EAAK+C,SAAS,CACV/C,MAAOA,SAnBvB,+BAyBQ,OACI,6BACI,kBAAC,EAAD,CAAWE,IAAKH,KAAKyC,MAAMhC,OAAOvB,GAAIe,MAAOD,KAAKyC,MAAMxC,MAAOQ,OAAQT,KAAKyC,MAAMhC,SAClF,yBAAKtB,UAAU,eACf,kBAAC,EAAD,CAAgByD,SAAU5C,KAAKjB,MAAM6D,gBA7BrD,GAAyCvC,aCa1BiD,EAff,2MAEEC,YAAc,WACZ,EAAKxE,MAAMyE,kBAAkB,EAAKzE,MAAM0B,SAH5C,wEAOI,OACE,yBAAKtB,UAAU,OAAOsE,QAASzD,KAAKuD,aAC/BvD,KAAKjB,MAAM0B,OAAOlB,eAT7B,GAA2Cc,aCe5BqD,EAff,2MAEEH,YAAc,WACZ,EAAKxE,MAAM4E,kBAAkB,EAAK5E,MAAMY,SAH5C,wEAOI,OACE,yBAAKR,UAAU,OAAOsE,QAASzD,KAAKuD,aACjCvD,KAAKjB,MAAMY,OAAOA,OAAOC,UATlC,GAA0CS,aCkB3BuD,EAlBf,2MAEEC,cAAgB,SAACC,GACf,EAAK/E,MAAM8E,cAAcC,IAH7B,wEAOI,OACE,yBAAK3E,UAAU,oBACb,yBAAKA,UAAU,yBACb,8CACA,2BAAO4E,YAAY,eAAeC,UAAWhE,KAAK6D,sBAX5D,GAAkCxD,aCIrB4D,EAAb,2MAEExB,MAAQ,CACJyB,eAAgB,GAChBC,eAAgB,KAChBC,sBAAuB,IAL7B,EAQEP,cAAgB,SAACC,GACb,GAAkB,UAAdA,EAAM3D,IAAiB,CACzB,IAAIkE,EAAQP,EAAMQ,OAAOC,MACzB,EAAKvB,SAAS,CACVkB,eAAgB,EAAKnF,MAAMyF,QAAQC,QAAO,SAAAhE,GAAM,OAAIA,EAAOlB,UAAUmF,cAAcC,SAASN,UAZxG,EAiBEb,kBAAoB,SAAC/C,GACjBkC,MAAM,8CAAD,OAA+ClC,EAAOvB,GAAtD,WACJ2D,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAzC,GAEF,EAAK4C,SAAS,CACVkB,eAAgB,GAChBC,eAAgB1D,EAChB2D,sBAAuBhE,EAAQ6C,MAAK,SAASC,EAAGC,GAAG,OAAOD,EAAEvD,OAAOC,KAAOuD,EAAExD,OAAOC,cAzBjG,EA8BE+D,kBAAoB,SAAChE,GACb,EAAKZ,MAAM6F,YACX,EAAK7F,MAAM6F,WAAWjF,GACtB,EAAKqD,SAAS,CACVoB,sBAAuB,KACvBD,eAAgB,SAGpB,EAAKpF,MAAM8F,WAAWlF,GACtB,EAAKqD,SAAS,CACVoB,sBAAuB,KACvBD,eAAgB,SAzC9B,wEA8CY,IAAD,OAEDW,EAAgB9E,KAAKyC,MAAMyB,eAAehE,KAAI,SAAAO,GAAM,OAAI,kBAAC,EAAD,CAAuBN,IAAKM,EAAOvB,GAAIuB,OAAQA,EAAQ+C,kBAAmB,EAAKA,uBACvIuB,EAAsB/E,KAAKyC,MAAM2B,sBAAsBlE,KAAI,SAAAP,GAAM,OAAI,kBAAC,EAAD,CAAsBQ,IAAKR,EAAOT,GAAIS,OAAQA,EAAQgE,kBAAmB,EAAKA,uBAEvJ,OACE,oCACG3D,KAAKyC,MAAM0B,eAAiB,KAAO,kBAAC,EAAD,CAAcN,cAAe7D,KAAK6D,gBACtE,yBAAK1E,UAAU,qBACZa,KAAKyC,MAAM0B,eAAiBnE,KAAKyC,MAAM0B,eAAe5E,UAAYuF,EAClE9E,KAAKyC,MAAM0B,eAAiBY,EAAsB,WAxD/D,GAAiC1E,aAmElB2E,eAJS,SAAAvC,GACpB,MAAO,CAAE+B,QAAS/B,EAAM+B,WAGbQ,CAAyBf,GCrDzBgB,EAlBI,SAAClG,GAAW,IAEnBmG,EAAenG,EAAfmG,WAER,OACI,yBAAK/F,UAAU,oBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAU+F,EAAWzE,OAAOE,WAA3C,IAAwDuE,EAAWzE,OAAOG,WAC1E,yBAAKzB,UAAU,WACX,yBAAKA,UAAU,QAAf,aAAiC+F,EAAWzE,OAAOI,UACnD,yBAAK1B,UAAU,QAAf,WAA+B+F,EAAWzE,OAAOK,YAAjD,IAA+DoE,EAAWzE,OAAOM,cAAjF,KACA,yBAAK5B,UAAU,QAAf,WAA+B+F,EAAWzE,OAAOO,cAAjD,YCKLmE,EAhBQ,SAACpG,GACtB,OACE,wBAAII,UAAU,kBACZ,wBAAIA,UAAWJ,EAAMqG,YAClBrG,EAAMsG,OAET,wBAAIlG,UAAU,YACXJ,EAAMqC,MAET,wBAAIjC,UAAWJ,EAAMuG,YAClBvG,EAAMwG,SCwBAC,EAjCM,SAACzG,GAAW,IAEvB0G,EAAiB1G,EAAjB0G,aACAC,EAAiB3G,EAAjB2G,aAER,OACE,oCACA,4CACA,2BAAOvG,UAAU,oCACf,+BACE,kBAAC,EAAD,CAAgBiC,KAAM,SAAUiE,MAAOI,EAAa9F,OAAOC,KAAM2F,MAAOG,EAAa/F,OAAOC,OAC3F6F,EAAapE,GAAKqE,EAAarE,GAAK,kBAAC,EAAD,CAAgBD,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAapE,GAAIkE,MAAOG,EAAarE,KAAQ,kBAAC,EAAD,CAAgBD,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAapE,GAAIkE,MAAOG,EAAarE,KAC5RoE,EAAanE,IAAMoE,EAAapE,IAAM,kBAAC,EAAD,CAAgBF,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAanE,IAAKiE,MAAOG,EAAapE,MAAS,kBAAC,EAAD,CAAgBF,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAanE,IAAKiE,MAAOG,EAAapE,MACnSmE,EAAalE,IAAMmE,EAAanE,IAAM,kBAAC,EAAD,CAAgBH,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAalE,IAAKgE,MAAOG,EAAanE,MAAS,kBAAC,EAAD,CAAgBH,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAalE,IAAKgE,MAAOG,EAAanE,MACnSkE,EAAajE,KAAOkE,EAAalE,KAAO,kBAAC,EAAD,CAAgBJ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAajE,KAAM+D,MAAOG,EAAalE,OAAU,kBAAC,EAAD,CAAgBJ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAajE,KAAM+D,MAAOG,EAAalE,OACxSiE,EAAahE,KAAOiE,EAAajE,KAAO,kBAAC,EAAD,CAAgBL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAahE,KAAM8D,MAAOG,EAAajE,OAAU,kBAAC,EAAD,CAAgBL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAahE,KAAM8D,MAAOG,EAAajE,OACxSgE,EAAa/D,IAAMgE,EAAahE,IAAM,kBAAC,EAAD,CAAgBN,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa/D,IAAK6D,MAAOG,EAAahE,MAAS,kBAAC,EAAD,CAAgBN,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa/D,IAAK6D,MAAOG,EAAahE,MACnS+D,EAAa9D,IAAM+D,EAAa/D,IAAM,kBAAC,EAAD,CAAgBP,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa9D,IAAK4D,MAAOG,EAAa/D,MAAS,kBAAC,EAAD,CAAgBP,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa9D,IAAK4D,MAAOG,EAAa/D,MACnS8D,EAAa7D,KAAO8D,EAAa9D,KAAO,kBAAC,EAAD,CAAgBR,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa7D,KAAM2D,MAAOG,EAAa9D,OAAU,kBAAC,EAAD,CAAgBR,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa7D,KAAM2D,MAAOG,EAAa9D,OAC1S6D,EAAa5D,KAAO6D,EAAa7D,KAAO,kBAAC,EAAD,CAAgBT,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa5D,KAAM0D,MAAOG,EAAa7D,OAAU,kBAAC,EAAD,CAAgBT,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa5D,KAAM0D,MAAOG,EAAa7D,OAC1S4D,EAAa3D,IAAM4D,EAAa5D,IAAM,kBAAC,EAAD,CAAgBV,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa3D,IAAKyD,MAAOG,EAAa5D,MAAS,kBAAC,EAAD,CAAgBV,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAa3D,IAAKyD,MAAOG,EAAa5D,MACnS2D,EAAa1D,IAAM2D,EAAa3D,IAAM,kBAAC,EAAD,CAAgBX,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAanE,IAAKiE,MAAOG,EAAapE,MAAS,kBAAC,EAAD,CAAgBF,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAanE,IAAKiE,MAAOG,EAAapE,MACnSmE,EAAazD,IAAM0D,EAAa1D,IAAM,kBAAC,EAAD,CAAgBZ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAazD,IAAKuD,MAAOG,EAAa1D,MAAS,kBAAC,EAAD,CAAgBZ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAazD,IAAKuD,MAAOG,EAAa1D,MACnSyD,EAAaxD,IAAMyD,EAAazD,IAAM,kBAAC,EAAD,CAAgBb,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAaxD,IAAKsD,MAAOG,EAAazD,MAAS,kBAAC,EAAD,CAAgBb,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAaxD,IAAKsD,MAAOG,EAAazD,MACnSwD,EAAavD,SAAWwD,EAAaxD,SAAW,kBAAC,EAAD,CAAgBd,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAavD,SAAUqD,MAAOG,EAAaxD,WAAc,kBAAC,EAAD,CAAgBd,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAavD,SAAUqD,MAAOG,EAAaxD,WAC1TuD,EAAatD,GAAKuD,EAAavD,GAAK,kBAAC,EAAD,CAAgBf,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAatD,GAAIoD,MAAOG,EAAavD,KAAQ,kBAAC,EAAD,CAAgBf,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAatD,GAAIoD,MAAOG,EAAavD,KAC5RsD,EAAarD,IAAMsD,EAAatD,IAAM,kBAAC,EAAD,CAAgBhB,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAarD,IAAKmD,MAAOG,EAAatD,MAAS,kBAAC,EAAD,CAAgBhB,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOI,EAAarD,IAAKmD,MAAOG,EAAatD,UCW7RoD,EArCM,SAACzG,GAAW,IAEvB0G,EAAiB1G,EAAjB0G,aACAC,EAAiB3G,EAAjB2G,aAEFnD,EAAQ,SAACoD,GACb,OAAOrD,KAAKC,MAAY,GAANoD,GAAU,IAI9B,OACE,oCACA,+CACA,2BAAOxG,UAAU,oCACf,+BACE,kBAAC,EAAD,CAAgBiC,KAAM,SAAUiE,MAAOI,EAAa9F,OAAOC,KAAM2F,MAAOG,EAAa/F,OAAOC,OAC3F2C,EAAMkD,EAAanE,IAAImE,EAAapE,IAAMkB,EAAMmD,EAAapE,IAAIoE,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAanE,IAAImE,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAapE,IAAIoE,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAanE,IAAImE,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAapE,IAAIoE,EAAarE,MAC7akB,EAAMkD,EAAalE,IAAIkE,EAAapE,IAAMkB,EAAMmD,EAAanE,IAAImE,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAalE,IAAIkE,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAanE,IAAImE,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAalE,IAAIkE,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAanE,IAAImE,EAAarE,MAC7akB,EAAMkD,EAAajE,KAAKiE,EAAapE,IAAMkB,EAAMmD,EAAalE,KAAKkE,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAajE,KAAKiE,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAalE,KAAKkE,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAajE,KAAKiE,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAalE,KAAKkE,EAAarE,MACnbkB,EAAMkD,EAAahE,KAAKgE,EAAapE,IAAMkB,EAAMmD,EAAajE,KAAKiE,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAahE,KAAKgE,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAajE,KAAKiE,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAahE,KAAKgE,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAajE,KAAKiE,EAAarE,MACnbkB,EAAMkD,EAAa/D,IAAI+D,EAAapE,IAAMkB,EAAMmD,EAAahE,IAAIgE,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa/D,IAAI+D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAahE,IAAIgE,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa/D,IAAI+D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAahE,IAAIgE,EAAarE,MAC7akB,EAAMkD,EAAa9D,IAAI8D,EAAapE,IAAMkB,EAAMmD,EAAa/D,IAAI+D,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa9D,IAAI8D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa/D,IAAI+D,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa9D,IAAI8D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa/D,IAAI+D,EAAarE,MAC7akB,EAAMkD,EAAa7D,KAAK6D,EAAapE,IAAMkB,EAAMmD,EAAa9D,KAAK8D,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa7D,KAAK6D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa9D,KAAK8D,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa7D,KAAK6D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa9D,KAAK8D,EAAarE,MACrbkB,EAAMkD,EAAa5D,KAAK4D,EAAapE,IAAMkB,EAAMmD,EAAa7D,KAAK6D,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa5D,KAAK4D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa7D,KAAK6D,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa5D,KAAK4D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa7D,KAAK6D,EAAarE,MACrbkB,EAAMkD,EAAa3D,IAAI2D,EAAapE,IAAMkB,EAAMmD,EAAa5D,IAAI4D,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa3D,IAAI2D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa5D,IAAI4D,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa3D,IAAI2D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa5D,IAAI4D,EAAarE,MAC7akB,EAAMkD,EAAa1D,IAAI0D,EAAapE,IAAMkB,EAAMmD,EAAa3D,IAAI2D,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa1D,IAAI0D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa3D,IAAI2D,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAa1D,IAAI0D,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa3D,IAAI2D,EAAarE,MAC7akB,EAAMkD,EAAazD,IAAIyD,EAAapE,IAAMkB,EAAMmD,EAAa1D,IAAI0D,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAazD,IAAIyD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa1D,IAAI0D,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAazD,IAAIyD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAa1D,IAAI0D,EAAarE,MAC7akB,EAAMkD,EAAaxD,IAAIwD,EAAapE,IAAMkB,EAAMmD,EAAazD,IAAIyD,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAaxD,IAAIwD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAazD,IAAIyD,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAaxD,IAAIwD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAazD,IAAIyD,EAAarE,MAC7akB,EAAMkD,EAAavD,SAASuD,EAAapE,IAAMkB,EAAMmD,EAAaxD,SAASwD,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAavD,SAASuD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAaxD,SAASwD,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAavD,SAASuD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAaxD,SAASwD,EAAarE,MACzckB,EAAMkD,EAAatD,GAAGsD,EAAapE,IAAMkB,EAAMmD,EAAavD,GAAGuD,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAatD,GAAGsD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAavD,GAAGuD,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAatD,GAAGsD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAavD,GAAGuD,EAAarE,MACrakB,EAAMkD,EAAarD,IAAIqD,EAAapE,IAAMkB,EAAMmD,EAAatD,IAAIsD,EAAarE,IAAM,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAarD,IAAIqD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAatD,IAAIsD,EAAarE,MAAS,kBAAC,EAAD,CAAgBD,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO9C,EAAMkD,EAAarD,IAAIqD,EAAapE,IAAKkE,MAAOhD,EAAMmD,EAAatD,IAAIsD,EAAarE,UCevauE,EA1Cf,2MAEInD,MAAQ,CACJoD,QAAS,KACTC,QAAS,MAJjB,EAOIlB,WAAa,SAACM,GACV,EAAKlC,SAAS,CACV6C,QAASX,KATrB,EAaIL,WAAa,SAACK,GACV,EAAKlC,SAAS,CACV8C,QAASZ,KAfrB,wEAoBQ,OACI,yBAAK/F,UAAU,gBACX,wBAAIA,UAAU,gCACV,uBAAGA,UAAU,cADjB,mBAIA,6BACA,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,UACVa,KAAKyC,MAAMoD,QAAU,kBAAC,EAAD,CAAYX,WAAYlF,KAAKyC,MAAMoD,UAAc,kBAAC,EAAD,CAAajB,WAAY5E,KAAK4E,cAEzG,yBAAKzF,UAAU,UACVa,KAAKyC,MAAMqD,QAAU,kBAAC,EAAD,CAAYZ,WAAYlF,KAAKyC,MAAMqD,UAAc,kBAAC,EAAD,CAAajB,WAAY7E,KAAK6E,eAG5G7E,KAAKyC,MAAMoD,SAAW7F,KAAKyC,MAAMqD,QAAU,kBAAC,EAAD,CAAcL,aAAczF,KAAKyC,MAAMoD,QAASH,aAAc1F,KAAKyC,MAAMqD,UAAa,KACjI9F,KAAKyC,MAAMoD,SAAW7F,KAAKyC,MAAMqD,QAAU,kBAACC,EAAD,CAAiBN,aAAczF,KAAKyC,MAAMoD,QAASH,aAAc1F,KAAKyC,MAAMqD,UAAa,UApCrJ,GAAsCzF,a,QC+GvB2F,EAlHf,iLACc,IAAD,EACL,OACI,yBAAK7G,UAAU,+BACX,yBAAKA,UAAU,WAEX,4BAAQA,UAAU,eAAeD,GAAG,SAChC,wBAAIC,UAAU,qCAAqC8G,OAAK,GACpDC,MAAO,oBACPC,WAAY,gBAFwC,2BAGxC,uBAHwC,sBAI7C,QAJ6C,wBAK3C,QAL2C,IAOpD,yBAAKhH,UAAU,sBACf,uBAAGA,UAAU,yBARjB,gBAWA,uBAAGA,UAAU,OAAO8G,MAAO,CAACC,MAAO,qBAAnC,2CAGJ,yBAAK/G,UAAU,sBACf,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,sBAEf,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,yBAAyBC,IAAI,kCAAkCE,IAAI,oBAEtF,yBAAKH,UAAU,UACX,wBAAIA,UAAU,UAAd,mBACA,6BACA,yBAAKA,UAAU,eACX,2HACA,kGACA,6BACA,kBAAC,IAAD,CAASF,GAAG,YACR,4BAAQE,UAAU,6BAAlB,yBAMhB,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,sBAEf,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,UAAd,wBACA,6BACA,yBAAKA,UAAU,eACX,sEACA,kGACA,6BACA,kBAAC,IAAD,CAASF,GAAG,UACR,4BAAQE,UAAU,6BAAlB,qBAIZ,yBAAKA,UAAU,UACX,yBAAKA,UAAU,yBAAyBC,IAAI,kCAAkCE,IAAI,mBAI1F,yBAAKH,UAAU,sBACf,yBAAKA,UAAU,sBAEf,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,yBAAyBC,IAAI,kCAAkCE,IAAI,6BAEtF,yBAAKH,UAAU,UACX,wBAAIA,UAAU,UAAd,2BACA,6BACA,yBAAKA,UAAU,eACX,0EACA,0GACA,6BACA,kBAAC,IAAD,CAASF,GAAG,mBACR,4BAAQE,UAAU,6BAAlB,uBAOhB,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,sBAEf,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,UAAd,iBACA,6BACA,yBAAKA,UAAU,eACX,0EACA,4GACA,6BACA,kBAAC,IAAD,CAASF,GAAG,aACR,4BAAQE,UAAU,6BAAlB,sBAIZ,yBAAKA,UAAU,UACX,yBAAKA,UAAU,yBAAyBC,IAAI,kCAAkCE,IAAI,yBAI1F,mCA3GpB,GAAmCe,aCyBpB+F,EA1Bc,WACzB,OACI,+BACI,wBAAIjH,UAAU,kBACV,oCACA,iCACA,kCACA,mCACA,kCACA,mCACA,kCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,kCACA,kCACA,sCCSDkH,EA7Ba,WACxB,OACI,+BACI,wBAAIlH,UAAU,kBACV,oCACA,iCACA,kCACA,mCACA,mCACA,kCACA,mCACA,mCACA,kCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,kCACA,kCACA,sCCUDmH,EAhCf,iLAEa,IAEGlF,EAASpB,KAAKjB,MAAdqC,KAER,OACI,wBAAIjC,UAAU,kBACV,4BACI,kBAAC,IAAD,CAASF,GAAI,YAAcmC,EAAKX,OAAOvB,IAAMkC,EAAKX,OAAOE,WAAzD,IAAsES,EAAKX,OAAOG,YAEtF,4BAAKQ,EAAKC,IACV,4BAAKD,EAAKE,KACV,4BAAKF,EAAKG,KACV,4BAAKH,EAAKI,MACV,4BAAKJ,EAAKK,MACV,4BAAKL,EAAKM,KACV,4BAAKN,EAAKO,KACV,4BAAKP,EAAKQ,MACV,4BAAKR,EAAKS,MACV,4BAAKT,EAAKU,KACV,4BAAKV,EAAKW,KACV,4BAAKX,EAAKY,KACV,4BAAKZ,EAAKa,KACV,4BAAKb,EAAKc,UACV,4BAAKd,EAAKe,IACV,4BAAKf,EAAKgB,UA1B1B,GAAwC/B,aCgCzBkG,EAhCW,SAACxH,GAAW,IAE1BqC,EAASrC,EAATqC,KAER,OACI,wBAAIjC,UAAU,kBACV,4BACI,kBAAC,IAAD,CAASF,GAAI,YAAcmC,EAAKX,OAAOvB,IAAMkC,EAAKX,OAAOE,WAAzD,IAAsES,EAAKX,OAAOG,YAEtF,4BAAKQ,EAAKC,IACV,4BAAKiB,KAAKC,MAAOnB,EAAKE,IAAIF,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKG,IAAIH,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKE,IAAIF,EAAKG,IAAO,KAAM,KAC5C,4BAAKe,KAAKC,MAAOnB,EAAKI,KAAKJ,EAAKC,GAAM,IAAI,IAC1C,4BAAKiB,KAAKC,MAAOnB,EAAKK,KAAKL,EAAKC,GAAM,IAAI,IAC1C,4BAAKiB,KAAKC,MAAOnB,EAAKI,KAAKJ,EAAKK,KAAQ,KAAM,KAC9C,4BAAKa,KAAKC,MAAOnB,EAAKM,IAAIN,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKO,IAAIP,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKM,IAAIN,EAAKO,IAAO,KAAM,KAC5C,4BAAKW,KAAKC,MAAOnB,EAAKQ,KAAKR,EAAKC,GAAM,IAAI,IAC1C,4BAAKiB,KAAKC,MAAOnB,EAAKS,KAAKT,EAAKC,GAAM,IAAI,IAC1C,4BAAKiB,KAAKC,MAAOnB,EAAKU,IAAIV,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKW,IAAIX,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKY,IAAIZ,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKa,IAAIb,EAAKC,GAAM,IAAI,IACzC,4BAAKiB,KAAKC,MAAOnB,EAAKc,SAASd,EAAKC,GAAM,IAAI,IAC9C,4BAAKiB,KAAKC,MAAOnB,EAAKe,GAAGf,EAAKC,GAAM,IAAI,IACxC,4BAAKiB,KAAKC,MAAOnB,EAAKgB,IAAIhB,EAAKC,GAAM,IAAI,MCJtCmF,EAxBf,iLAGI,OACE,yBAAKrH,UAAU,WACT,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,aACTa,KAAKjB,MAAMC,KAAKO,UACjB,yBAAKJ,UAAU,cAAf,eAAyCa,KAAKjB,MAAMC,KAAKyH,YACzD,yBAAKtH,UAAU,cAAf,aAAuCa,KAAKjB,MAAMC,KAAK0H,YAG/D,yBAAKvH,UAAU,mBACX,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBAAgBC,IAAKY,KAAKjB,MAAMC,KAAKK,KAAMC,IAAKU,KAAKjB,MAAMC,KAAKO,oBAfrG,GAA6Bc,aC0DdsG,EArDf,2MAEIlE,MAAQ,CACJmE,YAAa,GACb5H,KAAM,GACNY,KAAM,GALd,mFAQwB,IAAD,OACf+C,MAAM,4CAAD,OAA6C3C,KAAKjB,MAAM8H,OAAxD,YAAkE7G,KAAKjB,MAAM+H,WACjFjE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAA+D,GACF,EAAK5D,SAAS,CACV4D,YAAaA,EAAY3D,MAAK,SAASC,EAAGC,GACtC,OAAOA,EAAE9B,GAAK6B,EAAE7B,WAI5BsB,MAAM,4CAAD,OAA6C3C,KAAKjB,MAAM8H,SAC5DhE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAA7D,GACF,EAAKgE,SAAS,CACVhE,KAAMA,SAtBtB,+BA4BQ,IAAIe,EAAkBC,KAAKyC,MAAMmE,YAAY1G,KAAI,SAAAkB,GAAI,OAAI,kBAAC,EAAD,CAAoBjB,IAAKiB,EAAKlC,GAAIkC,KAAMA,OAC7FgC,EAAiBpD,KAAKyC,MAAMmE,YAAY1G,KAAI,SAAAkB,GAAI,OAAI,kBAAC,EAAD,CAAmBjB,IAAKiB,EAAKlC,GAAIkC,KAAMA,OAC/F,OACI,yBAAKjC,UAAU,+BACX,kBAAC,EAAD,CAASH,KAAMgB,KAAKyC,MAAMzD,KAAMY,KAAMI,KAAKyC,MAAMmE,YAAY,KAC7D,6BACA,+CACA,2BAAOzH,UAAU,4CACb,kBAAC,EAAD,MACA,+BACCiE,IAGL,6CACA,2BAAOjE,UAAU,4CACb,kBAAC,EAAD,MACA,+BACCY,SA7CrB,GAAyCM,aCQ1B0G,EAbf,iLAEQ,OACI,yBAAK5H,UAAU,4BACX,yBAAKA,UAAU,iBACf,2BAAOA,UAAU,SAAS6H,SAAUhH,KAAKjB,MAAMiI,WAC/C,uBAAG7H,UAAU,sBAN7B,GAA+BkB,aCgBhB4G,EAff,iLACc,IACCxG,EAAUT,KAAKjB,MAAf0B,OACP,OACI,yBAAKtB,UAAU,QACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,UACV,kBAAC,IAAD,CAASF,GAAI,YAAcwB,EAAOvB,IAAKuB,EAAOE,WAA9C,IAA2DF,EAAOG,kBAP1F,GAAoCP,aCarB6G,EAbf,iLAGQ,IAAMpC,EAAgB9E,KAAKjB,MAAMyF,QAAQtE,KAAI,SAAAO,GAAM,OAAI,kBAAC,EAAD,CAAgBN,IAAKM,EAAOvB,GAAIuB,OAAQA,OAE/F,OACI,yBAAKtB,UAAU,iCACV2F,OAPjB,GAAgCzE,aCEnB8G,EAAb,2MAEI1E,MAAQ,CACJyB,eAAgB,IAHxB,EAMIkD,cAAgB,SAACtD,GACb,IAAIO,EAAQP,EAAMQ,OAAOC,MAAMG,cACL,KAAvBZ,EAAMQ,OAAOC,MACZ,EAAKvB,SAAS,CACVkB,eAAgB,KAGpB,EAAKlB,SAAS,CACVkB,eAAgB,EAAKnF,MAAMyF,QAAQC,QAAO,SAAAhE,GAAM,OAAIA,EAAOlB,UAAUmF,cAAcC,SAASN,SAd5G,wEAoBQ,OACI,yBAAKlF,UAAU,+BACX,wBAAIkI,MAAM,gCACN,uBAAGA,MAAM,yBADb,kBAIA,6BACA,kBAAC,EAAD,CAAWL,SAAUhH,KAAKoH,gBAC1B,kBAAC,EAAD,CAAY5C,QAASxE,KAAKyC,MAAMyB,sBA5BhD,GAAsC7D,aAsCvB2E,gBAJS,SAAAvC,GACpB,MAAO,CAAE+B,QAAS/B,EAAM+B,WAGbQ,CAAyBmC,GCbzBG,GA5Bf,2MAEE/D,YAAc,WACR,EAAKxE,MAAMwI,WACb,EAAKxI,MAAMwI,aAEX,EAAKxI,MAAMyI,cANjB,wEAWI,OACE,oCACA,6BACE,yBAAKpI,IAAKY,KAAKjB,MAAMC,KAAKK,KAAMC,IAAKU,KAAKjB,MAAMC,KAAKO,UAAW0G,MAAO,CACrEwB,MAAO,QACPC,OAAQ,WAGZ,6BACE,wBAAIvI,UAAU,UAAUa,KAAKjB,MAAMC,KAAKO,WACV,IAA7BS,KAAKjB,MAAM4I,OAAOC,OAAe,4BAAQnE,QAASzD,KAAKuD,aAAtB,oBAA+D,4BAAKvD,KAAKjB,MAAM4I,OAAO,GAAGhI,OAAOC,YArB1I,GAAoCS,aCerBwH,GAff,2MAEEtE,YAAc,WACZ,EAAKxE,MAAM+I,gBAAgB,EAAK/I,MAAMC,OAH1C,wEAOI,OACE,yBAAKG,UAAU,OAAOsE,QAASzD,KAAKuD,aACjCvD,KAAKjB,MAAMC,KAAKO,eATzB,GAAyCc,aCmB1B0H,GAnBf,2MAEExE,YAAc,WACZZ,MAAM,4CAAD,OAA6C,EAAK5D,MAAMY,OAAOqI,QAA/D,YAA0E,EAAKjJ,MAAMY,OAAOC,OAChGiD,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAA8E,GACJ,EAAK5I,MAAM4E,kBAAkBgE,OANnC,wEAWI,OACE,yBAAKxI,UAAU,OAAOsE,QAASzD,KAAKuD,aACjCvD,KAAKjB,MAAMY,OAAOC,UAb3B,GAAuCS,aCG1B4H,GAAb,2MAEExF,MAAQ,CACNyF,aAAc,KACd9H,QAAS,IAJb,EAOE0H,gBAAkB,SAAC9I,GACjB2D,MAAM,4CAAD,OAA6C3D,EAAKE,KACtD2D,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAsF,GACJ,EAAKnF,SAAS,CACZkF,aAAclJ,EACdoB,QAAS+H,EAAI/H,cAbrB,EAkBEuD,kBAAoB,SAACgE,GACf,EAAK5I,MAAMqJ,UACb,EAAKrJ,MAAMqJ,SAAST,EAAQ,EAAKlF,MAAMyF,cACvC,EAAKlF,SAAS,CACVkF,aAAc,SAGlB,EAAKnJ,MAAMsJ,SAASV,EAAQ,EAAKlF,MAAMyF,cACvC,EAAKlF,SAAS,CACVkF,aAAc,SA3BxB,wEAgCY,IAAD,OAEHI,EAActI,KAAKjB,MAAMkB,MAAMC,KAAI,SAAAlB,GAAI,OAAI,kBAAC,GAAD,CAAqBmB,IAAKnB,EAAKE,GAAIF,KAAMA,EAAM8I,gBAAiB,EAAKA,qBAChHS,EAAoBvI,KAAKyC,MAAMrC,QAAQF,KAAI,SAAAP,GAAM,OAAI,kBAAC,GAAD,CAAmBQ,IAAKR,EAAOT,GAAIS,OAAQA,EAAQgE,kBAAmB,EAAKA,uBAEpI,OACE,yBAAKxE,UAAU,qBACZa,KAAKyC,MAAMyF,aAAelI,KAAKyC,MAAMyF,aAAa3I,UAAY+I,EAC9DtI,KAAKyC,MAAMyF,aAAeK,EAAoB,UAxCvD,GAAqClI,aAkDtB2E,gBAJS,SAAAvC,GACtB,MAAO,CAAExC,MAAOwC,EAAMxC,SAGT+E,CAAyBiD,ICgDzBO,GApGU,SAACzJ,GAAW,IAE3B0J,EAAgB1J,EAAhB0J,YACAC,EAAgB3J,EAAhB2J,YAEJC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAY,EACZC,EAAM,EACNC,EAAO,EAEPC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAY,EACZC,EAAM,EACNC,EAAO,EAsCX,OApCA/B,EAAYgC,SAAQ,SAAArJ,GAClBuH,GAAQvH,EAAKG,IACbqH,GAAQxH,EAAKE,IACbuH,GAASzH,EAAKK,KACdqH,GAAS1H,EAAKI,KACduH,GAAQ3H,EAAKO,IACbqH,GAAQ5H,EAAKM,IACbuH,GAAS7H,EAAKQ,KACdsH,GAAS9H,EAAKS,KACdsH,GAAQ/H,EAAKU,IACbsH,GAAQhI,EAAKW,IACbsH,GAAQjI,EAAKY,IACbsH,GAAQlI,EAAKa,IACbsH,GAAanI,EAAKc,SAClBsH,GAAOpI,EAAKe,GACZsH,GAAQrI,EAAKgB,OAGfsG,EAAY+B,SAAQ,SAAArJ,GAClBsI,GAAQtI,EAAKG,IACboI,GAAQvI,EAAKE,IACbsI,GAASxI,EAAKK,KACdoI,GAASzI,EAAKI,KACdsI,GAAQ1I,EAAKO,IACboI,GAAQ3I,EAAKM,IACbsI,GAAS5I,EAAKQ,KACdqI,GAAS7I,EAAKS,KACdqI,GAAQ9I,EAAKU,IACbqI,GAAQ/I,EAAKW,IACbqI,GAAQhJ,EAAKY,IACbqI,GAAQjJ,EAAKa,IACbqI,GAAalJ,EAAKc,SAClBqI,GAAOnJ,EAAKe,GACZqI,GAAQpJ,EAAKgB,OAIb,oCACA,6CACA,2BAAOjD,UAAU,8BACf,+BACE,kBAAC,EAAD,CAAgBiC,KAAM,SAAUiE,MAAOoD,EAAY,GAAG9I,OAAOC,KAAM2F,MAAOmD,EAAY,GAAG/I,OAAOC,OAC/FgJ,EAAOe,EAAO,kBAAC,EAAD,CAAgBvI,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOuD,EAAMrD,MAAOoE,IAAU,kBAAC,EAAD,CAAgBvI,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOuD,EAAMrD,MAAOoE,IAC1NhB,EAAOe,EAAO,kBAAC,EAAD,CAAgBtI,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOsD,EAAMpD,MAAOmE,IAAU,kBAAC,EAAD,CAAgBtI,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOsD,EAAMpD,MAAOmE,IAC1NZ,EAAQe,EAAQ,kBAAC,EAAD,CAAgBzI,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOyD,EAAOvD,MAAOsE,IAAW,kBAAC,EAAD,CAAgBzI,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOyD,EAAOvD,MAAOsE,IAC/NhB,EAAQe,EAAQ,kBAAC,EAAD,CAAgBxI,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOwD,EAAOtD,MAAOsE,IAAW,kBAAC,EAAD,CAAgBzI,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOwD,EAAOtD,MAAOsE,IAC/Nb,EAAOe,EAAO,kBAAC,EAAD,CAAgB3I,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO2D,EAAMzD,MAAOwE,IAAU,kBAAC,EAAD,CAAgB3I,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO2D,EAAMzD,MAAOwE,IAC1NhB,EAAOe,EAAO,kBAAC,EAAD,CAAgB1I,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO0D,EAAMxD,MAAOuE,IAAU,kBAAC,EAAD,CAAgB1I,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO0D,EAAMxD,MAAOuE,IAC1Nb,EAAQe,EAAQ,kBAAC,EAAD,CAAgB5I,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAO4D,EAAO1D,MAAOyE,IAAW,kBAAC,EAAD,CAAgB5I,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAO4D,EAAO1D,MAAOyE,IACjOd,EAAQe,EAAQ,kBAAC,EAAD,CAAgB7I,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAO6D,EAAO3D,MAAO0E,IAAW,kBAAC,EAAD,CAAgB7I,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAO6D,EAAO3D,MAAO0E,IACjOd,EAAOe,EAAO,kBAAC,EAAD,CAAgB9I,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO8D,EAAM5D,MAAO2E,IAAU,kBAAC,EAAD,CAAgB9I,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO8D,EAAM5D,MAAO2E,IAC1Nd,EAAOe,EAAO,kBAAC,EAAD,CAAgB/I,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO+D,EAAM7D,MAAO4E,IAAU,kBAAC,EAAD,CAAgB/I,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO+D,EAAM7D,MAAO4E,IAC1Nd,EAAOe,EAAO,kBAAC,EAAD,CAAgBhJ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOgE,EAAM9D,MAAO6E,IAAU,kBAAC,EAAD,CAAgBhJ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOgE,EAAM9D,MAAO6E,IAC1Nd,EAAOe,EAAO,kBAAC,EAAD,CAAgBjJ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOiE,EAAM/D,MAAO8E,IAAU,kBAAC,EAAD,CAAgBjJ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOiE,EAAM/D,MAAO8E,IAC1Nd,EAAYe,EAAY,kBAAC,EAAD,CAAgBlJ,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOkE,EAAWhE,MAAO+E,IAAe,kBAAC,EAAD,CAAgBlJ,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOkE,EAAWhE,MAAO+E,IACjPd,EAAMe,EAAM,kBAAC,EAAD,CAAgBnJ,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOmE,EAAKjE,MAAOgF,IAAS,kBAAC,EAAD,CAAgBnJ,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOmE,EAAKjE,MAAOgF,IACnNd,EAAOe,EAAO,kBAAC,EAAD,CAAgBpJ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOoE,EAAMlE,MAAOiF,IAAU,kBAAC,EAAD,CAAgBpJ,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOoE,EAAMlE,MAAOiF,QCyEpNE,GAtKQ,SAAC3L,GAAW,IAEzB0J,EAAgB1J,EAAhB0J,YACAC,EAAgB3J,EAAhB2J,YAEJiC,EAAS,GACTC,EAAS,GAEb,OAAOnC,EAAY,GAAG9I,OAAOC,MAC3B,KAAK,KACH+K,EAAS,GACT,MACF,KAAK,KACHA,EAAS,GACT,MACF,QACEA,EAAS,GAGb,OAAOjC,EAAY,GAAG/I,OAAOC,MAC3B,KAAK,KACHgL,EAAS,GACT,MACF,KAAK,KACHA,EAAS,GACT,MACF,QACEA,EAAS,GAGb,IAAIjC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAY,EACZC,EAAM,EACNC,EAAO,EAEPC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAY,EACZC,EAAM,EACNC,EAAO,EAEX/B,EAAYgC,SAAQ,SAAArJ,GAClBuH,GAAQvH,EAAKG,IACbqH,GAAQxH,EAAKE,IACbuH,GAASzH,EAAKK,KACdqH,GAAS1H,EAAKI,KACduH,GAAQ3H,EAAKO,IACbqH,GAAQ5H,EAAKM,IACbuH,GAAS7H,EAAKQ,KACdsH,GAAS9H,EAAKS,KACdsH,GAAQ/H,EAAKU,IACbsH,GAAQhI,EAAKW,IACbsH,GAAQjI,EAAKY,IACbsH,GAAQlI,EAAKa,IACbsH,GAAanI,EAAKc,SAClBsH,GAAOpI,EAAKe,GACZsH,GAAQrI,EAAKgB,OAGfsG,EAAY+B,SAAQ,SAAArJ,GAClBsI,GAAQtI,EAAKG,IACboI,GAAQvI,EAAKE,IACbsI,GAASxI,EAAKK,KACdoI,GAASzI,EAAKI,KACdsI,GAAQ1I,EAAKO,IACboI,GAAQ3I,EAAKM,IACbsI,GAAS5I,EAAKQ,KACdqI,GAAS7I,EAAKS,KACdqI,GAAQ9I,EAAKU,IACbqI,GAAQ/I,EAAKW,IACbqI,GAAQhJ,EAAKY,IACbqI,GAAQjJ,EAAKa,IACbqI,GAAalJ,EAAKc,SAClBqI,GAAOnJ,EAAKe,GACZqI,GAAQpJ,EAAKgB,OAGf,IAAIyI,EAAcvI,KAAKC,MAAOkH,EAAKkB,EAAQ,IAAI,GAC3CG,EAAcxI,KAAKC,MAAOqG,EAAK+B,EAAQ,IAAI,GAC3CI,EAAczI,KAAKC,MAAOoG,EAAKgC,EAAQ,IAAI,GAC3CK,EAAO1I,KAAKC,MAAOqG,EAAKD,EAAM,KAAM,IACpCsC,EAAe3I,KAAKC,MAAOuG,EAAM6B,EAAQ,IAAI,GAC7CO,EAAe5I,KAAKC,MAAOsG,EAAM8B,EAAQ,IAAI,GAC7CQ,EAAQ7I,KAAKC,MAAOuG,EAAMD,EAAO,KAAM,IACvCuC,EAAc9I,KAAKC,MAAOyG,EAAK2B,EAAQ,IAAI,GAC3CU,EAAc/I,KAAKC,MAAOwG,EAAK4B,EAAQ,IAAI,GAC3CW,EAAOhJ,KAAKC,MAAOyG,EAAKD,EAAM,KAAM,IACpCwC,EAAejJ,KAAKC,MAAO0G,EAAM0B,EAAQ,IAAI,GAC7Ca,EAAelJ,KAAKC,MAAO2G,EAAMyB,EAAQ,IAAI,GAC7Cc,EAAcnJ,KAAKC,MAAO4G,EAAKwB,EAAQ,IAAI,GAC3Ce,EAAcpJ,KAAKC,MAAO6G,EAAKuB,EAAQ,IAAI,GAC3CgB,EAAcrJ,KAAKC,MAAO8G,EAAKsB,EAAQ,IAAI,GAC3CiB,EAActJ,KAAKC,MAAO+G,EAAKqB,EAAQ,IAAI,GAC3CkB,EAAavJ,KAAKC,MAAOgH,EAAUoB,EAAQ,IAAI,GAC/CmB,GAAaxJ,KAAKC,MAAOiH,EAAImB,EAAQ,IAAI,GAEzCoB,GAAczJ,KAAKC,MAAOiI,EAAKI,EAAQ,IAAI,GAC3CoB,GAAc1J,KAAKC,MAAOoH,EAAKiB,EAAQ,IAAI,GAC3CqB,GAAc3J,KAAKC,MAAOmH,EAAKkB,EAAQ,IAAI,GAC3CsB,GAAO5J,KAAKC,MAAOoH,EAAKD,EAAM,KAAM,IACpCyC,GAAe7J,KAAKC,MAAOsH,EAAMe,EAAQ,IAAI,GAC7CwB,GAAe9J,KAAKC,MAAOqH,EAAMgB,EAAQ,IAAI,GAC7CyB,GAAQ/J,KAAKC,MAAOsH,EAAMD,EAAO,KAAM,IACvC0C,GAAchK,KAAKC,MAAOwH,EAAKa,EAAQ,IAAI,GAC3C2B,GAAcjK,KAAKC,MAAOuH,EAAKc,EAAQ,IAAI,GAC3C4B,GAAOlK,KAAKC,MAAOwH,EAAKD,EAAM,KAAM,IACpC2C,GAAenK,KAAKC,MAAOyH,EAAMY,EAAQ,IAAI,GAC7C8B,GAAepK,KAAKC,MAAO0H,EAAMW,EAAQ,IAAI,GAC7C+B,GAAcrK,KAAKC,MAAO2H,EAAKU,EAAQ,IAAI,GAC3CgC,GAActK,KAAKC,MAAO4H,EAAKS,EAAQ,IAAI,GAC3CiC,GAAcvK,KAAKC,MAAO6H,EAAKQ,EAAQ,IAAI,GAC3CkC,GAAcxK,KAAKC,MAAO8H,EAAKO,EAAQ,IAAI,GAC3CmC,GAAazK,KAAKC,MAAO+H,EAAUM,EAAQ,IAAI,GAC/CoC,GAAa1K,KAAKC,MAAOgI,EAAIK,EAAQ,IAAI,GAE7C,OACE,oCACA,+CACA,2BAAOzL,UAAU,8BACf,+BACE,kBAAC,EAAD,CAAgBiC,KAAM,SAAUiE,MAAOoD,EAAY,GAAG9I,OAAOC,KAAM2F,MAAOmD,EAAY,GAAG/I,OAAOC,OAC/FiL,EAAckB,GAAc,kBAAC,EAAD,CAAgB3K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOwF,EAAatF,MAAOwG,KAAiB,kBAAC,EAAD,CAAgB3K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOwF,EAAatF,MAAOwG,KAC7PjB,EAAckB,GAAc,kBAAC,EAAD,CAAgB5K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOyF,EAAavF,MAAOyG,KAAiB,kBAAC,EAAD,CAAgB5K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOyF,EAAavF,MAAOyG,KAC7PjB,EAAckB,GAAc,kBAAC,EAAD,CAAgB7K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO0F,EAAaxF,MAAO0G,KAAiB,kBAAC,EAAD,CAAgB7K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO0F,EAAaxF,MAAO0G,KAC7PjB,EAAOkB,GAAO,kBAAC,EAAD,CAAgB9K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO2F,EAAMzF,MAAO2G,KAAU,kBAAC,EAAD,CAAgB9K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO2F,EAAMzF,MAAO2G,KAC1NjB,EAAekB,GAAe,kBAAC,EAAD,CAAgB/K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO4F,EAAc1F,MAAO4G,KAAkB,kBAAC,EAAD,CAAgB/K,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO4F,EAAc1F,MAAO4G,KAClQjB,EAAekB,GAAe,kBAAC,EAAD,CAAgBhL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO6F,EAAc3F,MAAO6G,KAAkB,kBAAC,EAAD,CAAgBhL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO6F,EAAc3F,MAAO6G,KAClQjB,EAAQkB,GAAQ,kBAAC,EAAD,CAAgBjL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO8F,EAAO5F,MAAO8G,KAAW,kBAAC,EAAD,CAAgBjL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO8F,EAAO5F,MAAO8G,KAC/NjB,EAAckB,GAAc,kBAAC,EAAD,CAAgBlL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO+F,EAAa7F,MAAO+G,KAAiB,kBAAC,EAAD,CAAgBlL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAO+F,EAAa7F,MAAO+G,KAC7PjB,EAAckB,GAAc,kBAAC,EAAD,CAAgBnL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOgG,EAAa9F,MAAOgH,KAAiB,kBAAC,EAAD,CAAgBnL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOgG,EAAa9F,MAAOgH,KAC7PjB,EAAOkB,GAAO,kBAAC,EAAD,CAAgBpL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOiG,EAAM/F,MAAOiH,KAAU,kBAAC,EAAD,CAAgBpL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOiG,EAAM/F,MAAOiH,KAC1NjB,EAAekB,GAAe,kBAAC,EAAD,CAAgBrL,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAOkG,EAAchG,MAAOkH,KAAkB,kBAAC,EAAD,CAAgBrL,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAOkG,EAAchG,MAAOkH,KACpQjB,EAAekB,GAAe,kBAAC,EAAD,CAAgBtL,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAOmG,EAAcjG,MAAOmH,KAAkB,kBAAC,EAAD,CAAgBtL,KAAM,OAAQgE,WAAY,WAAYE,WAAY,WAAYD,MAAOmG,EAAcjG,MAAOmH,KACpQjB,EAAckB,GAAc,kBAAC,EAAD,CAAgBvL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOoG,EAAalG,MAAOoH,KAAiB,kBAAC,EAAD,CAAgBvL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOoG,EAAalG,MAAOoH,KAC7PjB,EAAckB,GAAc,kBAAC,EAAD,CAAgBxL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOqG,EAAanG,MAAOqH,KAAiB,kBAAC,EAAD,CAAgBxL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOqG,EAAanG,MAAOqH,KAC7PjB,EAAckB,GAAc,kBAAC,EAAD,CAAgBzL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOsG,EAAapG,MAAOsH,KAAiB,kBAAC,EAAD,CAAgBzL,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOsG,EAAapG,MAAOsH,KAC7PjB,EAAckB,GAAc,kBAAC,EAAD,CAAgB1L,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOuG,EAAarG,MAAOuH,KAAiB,kBAAC,EAAD,CAAgB1L,KAAM,MAAOgE,WAAY,WAAYE,WAAY,WAAYD,MAAOuG,EAAarG,MAAOuH,KAC7PjB,EAAakB,GAAa,kBAAC,EAAD,CAAgB3L,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOwG,EAAYtG,MAAOwH,KAAgB,kBAAC,EAAD,CAAgB3L,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOwG,EAAYtG,MAAOwH,KACtPjB,GAAakB,GAAa,kBAAC,EAAD,CAAgB5L,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOyG,GAAYvG,MAAOyH,KAAgB,kBAAC,EAAD,CAAgB5L,KAAM,KAAMgE,WAAY,WAAYE,WAAY,WAAYD,MAAOyG,GAAYvG,MAAOyH,SChGhPC,GA5Df,2MAEExK,MAAQ,CACNyK,MAAO,KACPzE,YAAa,GACb0E,MAAO,KACPzE,YAAa,IANjB,EASEN,SAAW,SAACgF,EAAYpO,GACtB,EAAKgE,SAAS,CACZkK,MAAOlO,EACPyJ,YAAa2E,KAZnB,EAgBE/E,SAAW,SAAC+E,EAAYpO,GACtB,EAAKgE,SAAS,CACZmK,MAAOnO,EACP0J,YAAa0E,KAnBnB,EAuBE7F,WAAa,WACX,EAAKvE,SAAS,CACZkK,MAAO,KACPzE,YAAa,MA1BnB,EA8BEjB,WAAa,WACX,EAAKxE,SAAS,CACZmK,MAAO,KACPzE,YAAa,MAjCnB,wEAuCI,OACE,yBAAKvJ,UAAU,gBACb,wBAAIkI,MAAM,gCACR,uBAAGA,MAAM,cADX,gBAIE,yBAAKlI,UAAU,sBACX,yBAAKA,UAAU,UACVa,KAAKyC,MAAMyK,MAAQ,kBAAC,GAAD,CAAgB3F,WAAYvH,KAAKuH,WAAYvI,KAAMgB,KAAKyC,MAAMyK,MAAOvF,OAAQ3H,KAAKyC,MAAMgG,cAAiB,kBAAC,GAAD,CAAiBL,SAAUpI,KAAKoI,YAEjK,yBAAKjJ,UAAU,UACVa,KAAKyC,MAAM0K,MAAQ,kBAAC,GAAD,CAAgB3F,WAAYxH,KAAKwH,WAAYxI,KAAMgB,KAAKyC,MAAM0K,MAAOxF,OAAQ3H,KAAKyC,MAAMiG,cAAiB,kBAAC,GAAD,CAAiBL,SAAUrI,KAAKqI,aAGlI,IAAlCrI,KAAKyC,MAAMgG,YAAYb,QAAkD,IAAlC5H,KAAKyC,MAAMiG,YAAYd,OAAe,KAAO,kBAAC,GAAD,CAAgBa,YAAazI,KAAKyC,MAAMgG,YAAaC,YAAa1I,KAAKyC,MAAMiG,cAC/H,IAAlC1I,KAAKyC,MAAMgG,YAAYb,QAAkD,IAAlC5H,KAAKyC,MAAMiG,YAAYd,OAAe,KAAO,kBAAC,GAAD,CAAkBa,YAAazI,KAAKyC,MAAMgG,YAAaC,YAAa1I,KAAKyC,MAAMiG,mBAtD9K,GAA2CrI,a,ICJXA,Y,OCkEjBgN,GA9Df,2MAEE5K,MAAQ,CACNyK,MAAO,KACPzE,YAAa,GACb0E,MAAO,KACPzE,YAAa,IANjB,EASEN,SAAW,SAACgF,EAAYpO,GACtB,EAAKgE,SAAS,CACZkK,MAAOlO,EACPyJ,YAAa2E,KAZnB,EAgBE/E,SAAW,SAAC+E,EAAYpO,GACtB,EAAKgE,SAAS,CACZmK,MAAOnO,EACP0J,YAAa0E,KAnBnB,EAuBE7F,WAAa,WACX,EAAKvE,SAAS,CACZkK,MAAO,KACPzE,YAAa,MA1BnB,EA8BEjB,WAAa,WACX,EAAKxE,SAAS,CACZmK,MAAO,KACPzE,YAAa,MAjCnB,wEAsCI,OACE,yBAAKvJ,UAAU,gBACb,kBAAC,KAAD,CAASmO,KAAK,SACd,wBAAIrH,MAAO,CAAEsH,OAAQ,KAArB,sBACA,mIACA,uDA3CR,GAAuClN,aCMxBmN,GAVA,WACb,OACE,yBAAKrO,UAAU,gBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBAAf,yBCoBOsO,GAxBM,SAAC1O,GAAW,IAEvBqC,EAASrC,EAATqC,KACJG,EAAMH,EAAKsM,IAAIC,KAAOvM,EAAKsM,IAAIjM,KAC/BH,EAAMF,EAAKsM,IAAIE,KAAOxM,EAAKsM,IAAIlM,KAC/BY,EAAuB,EAAhBhB,EAAKsM,IAAIE,KAA6B,EAAhBxM,EAAKsM,IAAIlM,KAAYJ,EAAKsM,IAAIhM,IAE/D,OACE,4BACC,4BAAKN,EAAKX,OAAOE,WAAjB,IAA8BS,EAAKX,OAAOG,WAC1C,4BAAKU,EAAL,IAAWC,GACX,4BAAKH,EAAKsM,IAAIlM,KAAd,IAAqBJ,EAAKsM,IAAIjM,MAC9B,4BAAKL,EAAKsM,IAAIhM,IAAd,IAAoBN,EAAKsM,IAAI/L,KAC7B,4BAAKP,EAAKsM,IAAI9L,MACd,4BAAKR,EAAKsM,IAAI7L,MACd,4BAAKT,EAAKsM,IAAI3L,KACd,4BAAKX,EAAKsM,IAAI1L,KACd,4BAAKZ,EAAKsM,IAAIzL,KACd,4BAAKb,EAAKsM,IAAIzO,IACd,4BAAKmD,KC4EKyL,GA9FM,SAAC9O,GAAW,IAEvB+O,EAAc/O,EAAd+O,UAEJC,EAAkBD,EAAUpL,MAAMxC,KAAI,SAAAkB,GAAI,OAAI,kBAAC,GAAD,CAAcA,KAAMA,OAElE4M,EAAY,EACZC,EAAW,EACXC,EAAW,EACXC,EAAW,EACXC,EAAW,EACXC,EAAU,EACVC,EAAU,EACVC,EAAW,EACXC,EAAW,EACXC,EAAU,EACVC,EAAU,EACVC,EAAU,EACVC,EAAS,EAoBb,OAlBAd,EAAUpL,MAAM+H,SAAQ,SAAArJ,GACtB4M,GAA6B,EAAhB5M,EAAKsM,IAAIE,KACtBI,GAA6B,EAAhB5M,EAAKsM,IAAIlM,KACtBwM,GAAa5M,EAAKsM,IAAIhM,IACtBuM,GAAY7M,EAAKsM,IAAIC,KACrBO,GAAY9M,EAAKsM,IAAIE,KACrBO,GAAY/M,EAAKsM,IAAIjM,KACrB2M,GAAYhN,EAAKsM,IAAIlM,KACrB6M,GAAWjN,EAAKsM,IAAI/L,IACpB2M,GAAWlN,EAAKsM,IAAIhM,IACpB6M,GAAYnN,EAAKsM,IAAI9L,KACrB4M,GAAYpN,EAAKsM,IAAI7L,KACrB4M,GAAWrN,EAAKsM,IAAI3L,IACpB2M,GAAWtN,EAAKsM,IAAI1L,IACpB2M,GAAWvN,EAAKsM,IAAIzL,IACpB2M,GAAUxN,EAAKsM,IAAIzO,MAInB,oCACE,4BAAK6O,EAAUlO,MACf,4BAAKkO,EAAU9O,KAAKO,WACpB,2BAAOJ,UAAU,oBACf,+BACE,4BACE,sCACA,kCACA,mCACA,kCACA,oCACA,oCACA,mCACA,mCACA,mCACA,kCACA,qCAGJ,+BACG4O,GAEH,+BACE,4BACE,oCACA,4BAAKG,EAAWE,EAAhB,IAA2BH,EAAWE,GACtC,4BAAKC,EAAL,IAAgBD,GAChB,4BAAKG,EAAL,IAAeD,GACf,4BAAKE,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKZ,IAEP,4BACE,6BACA,4BAAK1L,KAAKC,OAAO2L,EAASE,IAAWH,EAASE,GAAY,KAAM,GAAhE,KACA,4BAAK7L,KAAKC,MAAO6L,EAASD,EAAY,KAAM,GAA5C,KACA,4BAAK7L,KAAKC,MAAO+L,EAAQD,EAAW,KAAM,GAA1C,KACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,kCCpCGQ,GAlDf,iLAKI,IAAIC,EAAa,EACbC,EAAa,EAcjB,OAZA/O,KAAKjB,MAAMmO,MAAMxK,MAAM+H,SAAQ,SAAArJ,GAC7B0N,GAA8B,EAAhB1N,EAAKsM,IAAIE,KACvBkB,GAA8B,EAAhB1N,EAAKsM,IAAIlM,KACvBsN,GAAc1N,EAAKsM,IAAIhM,OAGzB1B,KAAKjB,MAAMoO,MAAMzK,MAAM+H,SAAQ,SAAArJ,GAC7B2N,GAA8B,EAAhB3N,EAAKsM,IAAIE,KACvBmB,GAA8B,EAAhB3N,EAAKsM,IAAIlM,KACvBuN,GAAc3N,EAAKsM,IAAIhM,OAIvB,oCACC,yBAAKvC,UAAU,qBACd,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACb,yBAAKC,IAAKY,KAAKjB,MAAMmO,MAAMlO,KAAKK,KAAMF,UAAU,0BAA0BG,IAAKU,KAAKjB,MAAMmO,MAAMlO,KAAKO,YACpGuP,GAEH,6BACG9O,KAAKjB,MAAMmO,MAAMtN,KADpB,IAC2BI,KAAKjB,MAAMmO,MAAMlO,KAAKO,YAGnD,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,SACb,yBAAKC,IAAKY,KAAKjB,MAAMoO,MAAMnO,KAAKK,KAAMF,UAAU,0BAA0BG,IAAKU,KAAKjB,MAAMoO,MAAMnO,KAAKO,YACpGwP,GAEH,6BACG/O,KAAKjB,MAAMoO,MAAMvN,KADpB,IAC2BI,KAAKjB,MAAMoO,MAAMnO,KAAKO,aAIpD,6BACA,kBAAC,GAAD,CAAcuO,UAAW9N,KAAKjB,MAAMmO,QACpC,kBAAC,GAAD,CAAcY,UAAW9N,KAAKjB,MAAMoO,aA5C3C,GAAiC9M,aCoClB2O,GAnCf,2MAEEvM,MAAQ,CACNyK,MAAO,KACPC,MAAO,KACP8B,QAAQ,GALZ,8NAUwBtM,MAAM,8CAAD,OAA+C3C,KAAKjB,MAAMmQ,QAA1D,YAAqElP,KAAKjB,MAAMoQ,UAV7G,WAUYhH,EAVZ,QAWeiH,GAXf,sBAYcC,MAAMlH,EAAImH,YAZxB,wBAc2BnH,EAAIpF,OAd/B,QAccA,EAdd,OAeQ/C,KAAKgD,SAAS,CACZiM,QAAQ,EACR/B,MAAOnK,EAAKmK,MACZC,MAAOpK,EAAKoK,QAlBtB,0DAsBMoC,QAAQC,IAAR,MAtBN,+IA2BI,OACE,oCACGxP,KAAKyC,MAAMwM,OAAS,kBAAC,GAAD,CAAa/B,MAAOlN,KAAKyC,MAAMyK,MAAOC,MAAOnN,KAAKyC,MAAM0K,QAAW,kBAAC,GAAD,WA7BhG,GAAwC9M,aC6BzBoP,GA9Bf,iLAII,IAAIC,EAAO1P,KAAKjB,MAAMkB,MAAMwE,QAAO,SAAAzF,GAAI,MAAwB,SAApBA,EAAKyH,cAC5CkJ,EAAO3P,KAAKjB,MAAMkB,MAAMwE,QAAO,SAAAzF,GAAI,MAAwB,SAApBA,EAAKyH,cAC5CmJ,EAAaF,EAAKxP,KAAI,SAAAlB,GAAI,OAAI,kBAAC,EAAD,CAAcmB,IAAKnB,EAAKE,GAAIF,KAAMA,OAChE6Q,EAAaF,EAAKzP,KAAI,SAAAlB,GAAI,OAAI,kBAAC,EAAD,CAAcmB,IAAKnB,EAAKE,GAAIF,KAAMA,OAEpE,OACE,yBAAKG,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0BACb,kDACCyQ,IAGL,yBAAKzQ,UAAU,UACb,yBAAKA,UAAU,0BACb,kDACC0Q,UArBf,GAA+BxP,aCWlByP,GAAb,2MAEIrN,MAAQ,CACJwM,QAAQ,EACRrI,YAAa,IAJrB,EA8DImJ,iBAAmB,SAACC,GAChB,IAAMC,EAAYC,SAASF,EAAaG,MAAMC,OAAOC,SAC/CC,EAAYJ,SAASF,EAAaG,MAAMC,OAAOG,SACrD,OAAO,kBAAC,GAAD,CAAoBrB,QAASe,EAAWd,QAASmB,KAjEhE,EAoEIE,gBAAkB,SAACR,GACf,IAAM9Q,EAAKgR,SAASF,EAAaG,MAAMC,OAAOlR,IAC1CF,EAAO,EAAKD,MAAMkB,MAAMwQ,MAAK,SAAAzR,GAAI,OAAIA,EAAKE,KAAOA,KACrD,OAAO,kBAAC,EAAD,CAAgBF,KAAMA,KAvErC,EA0EI0R,aAAe,SAACV,GACZ,IAAM9Q,EAAKgR,SAASF,EAAaG,MAAMC,OAAOlR,IAC9C,OAAO,kBAAC,EAAD,CAAqB0D,SAAW1D,KA5E/C,EA+EIyR,iBAAmB,SAACX,GAChB,IAAMnJ,EAASqJ,SAASF,EAAaG,MAAMC,OAAOlR,IAC5C4H,EAAWoJ,SAASF,EAAaG,MAAMC,OAAOzQ,QACpD,OAAO,kBAAC,EAAD,CAAqBkH,OAAQA,EAAQC,SAAUA,KAlF9D,wEAQQ,OACI,oCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8J,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YACd,kBAAC,GAAD,CAAkBrM,QAASxE,KAAKyC,MAAM+B,WAK1C,kBAAC,IAAD,CAAOoM,OAAK,EAACC,KAAK,gBACb7Q,KAAK0Q,cAIV,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,UACd,kBAAC,GAAD,CAAW5Q,MAAOD,KAAKjB,MAAMkB,SAIjC,kBAAC,IAAD,CAAO2Q,OAAK,EAACC,KAAK,cACb7Q,KAAKwQ,iBAIV,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,sBACb7Q,KAAK2Q,kBAIV,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,mBACd,kBAAC,EAAD,OAIJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBACd,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aACd,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,+BACb7Q,KAAK+P,wBAvD9B,GAAmC1P,aA0FpB2E,gBAJS,SAAAvC,GACpB,MAAO,CAAExC,MAAOwC,EAAMxC,SAGX+E,CAAyB8K,ICrEzBgB,GAhCf,iLAGQ,OACI,yBAAK3R,UAAU,gBACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,CAASyR,OAAK,EAAC3R,GAAG,IAAIE,UAAU,oBAAhC,QAGA,kBAAC,IAAD,CAASF,GAAG,WAAWE,UAAU,oBAAjC,WAGA,kBAAC,IAAD,CAASF,GAAG,SAASE,UAAU,oBAA/B,SAGA,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAASF,GAAG,kBAAkBE,UAAU,uBAAxC,mBAGA,kBAAC,IAAD,CAASF,GAAG,gBAAgBE,UAAU,uBAAtC,iBAGA,kBAAC,IAAD,CAASF,GAAG,YAAYE,UAAU,uBAAlC,wBAtBxB,GAA4BkB,aCUb0Q,GAVf,iLAEQ,OACI,yBAAK5R,UAAU,gBACX,kBAAC,GAAD,WAJhB,GAAkCkB,a,iBCK5B2Q,G,2MAEJvO,MAAQ,CACNwM,QAAQ,G,EAGVgC,kB,sBAAoB,kCAAA/N,EAAA,sEACEP,MAAM,4CADR,cACduO,EADc,gBAEAA,EAAQnO,OAFR,cAEd9C,EAFc,OAGlB,EAAKlB,MAAMoS,cAAclR,GAHP,SAIG0C,MAAM,8CAJT,cAIdyO,EAJc,iBAKEA,EAASrO,OALX,QAKdyB,EALc,OAMlB,EAAKzF,MAAMsS,gBAAgB7M,GAC3B,EAAKxB,SAAS,CACZiM,QAAQ,IARQ,4C,wEAalB,OACE,kBAAC,IAAMqC,SAAP,KACE,kBAAC,GAAD,MACA,yBAAKnS,UAAU,qCACf,yBAAKA,UAAU,+BACZa,KAAKyC,MAAMwM,OAAS,kBAAC,GAAD,MAAmB,kBAACsC,GAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,aAE5E,6BACA,kC,GA3BUC,IAAMrR,WAkDT2E,eAAQ,MAjBI,SAAA2M,GACzB,MAAO,CACLN,gBAAiB,SAAC7M,GAChBmN,EAAS,CACPC,KAAM,mBACNpN,QAASA,KAGb2M,cAAe,SAAClR,GACd0R,EAAS,CACPC,KAAM,iBACN3R,MAAOA,QAMA+E,CAAkCgM,IC9C7Ba,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7B,MACvB,2D,0lBClBN,IAAM8B,GAAe,CACnBhS,MAAO,GACPuE,QAAS,GACTpE,QAAS,IAuBI8R,GApBC,WAAsC,IAArCC,EAAoC,uDAAzBF,GAAcG,EAAW,uCACnD,OAAOA,EAAOR,MACZ,IAAK,mBACH,OAAO,GAAP,GACKO,EADL,CAEE3N,QAAS4N,EAAO5N,UAEpB,IAAK,iBACH,OAAO,GAAP,GACK2N,EADL,CAEElS,MAAOmS,EAAOnS,QAElB,IAAK,mBACH,OAAO,GAAP,GACKkS,EADL,CAEE/R,QAASgS,EAAOhS,YCVlBiS,GAAQC,aAAYJ,GACxBJ,OAAOS,8BAAgCT,OAAOS,gCAEhDC,IAASC,OAAO,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,CAAYK,SAAS,KACnB,kBAAC,GAAD,QAEQC,SAASC,eAAe,SF+G9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlQ,MAAK,SAAAmQ,GACjCA,EAAaC,kB","file":"static/js/main.c9776b53.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst TeamListItem = (props) => {\r\n\r\n    const { team } = props;\r\n\r\n    return (\r\n        <>\r\n        <br></br>\r\n        <NavLink to={\"/teams/\" + team.id}>\r\n            <div className=\"item\">\r\n                <img className=\"logo\" src={team.logo} alt={team.full_name}/>\r\n            </div>\r\n        </NavLink>\r\n        <br></br>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default TeamListItem;\r\n","import React from 'react';\r\n\r\nconst TeamListHeader = () => {\r\n    return (\r\n        <tr>\r\n            <th>Team Name</th>\r\n            <th>ABV</th>\r\n            <th>Conference</th>\r\n            <th>Division</th>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TeamListHeader;\r\n","import React from 'react';\r\n\r\nconst TeamSeasonsListHeader = () => {\r\n    return (\r\n        <tr>\r\n            <th>Season</th>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TeamSeasonsListHeader;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst TeamSeasonListItem = (props) => {\r\n\r\n    const { season } = props;\r\n    const { team } = props;\r\n    \r\n    return (\r\n        \r\n        <>\r\n            <tr>\r\n                <td>\r\n                    <NavLink to={\"/teams/\" + team.id + \"/\" + season.year }>{season.year}</NavLink>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default TeamSeasonListItem;","import React, { Component } from 'react';\r\nimport TeamListItem from './TeamListItem'\r\nimport TeamListHeader from '../components/TeamListHeader'\r\nimport TeamSeasonsListHeader from '../components/TeamSeasonsListHeader'\r\nimport TeamSeasonListItem from '../components/TeamSeasonListItem'\r\n\r\nexport class List extends Component {\r\n\r\n    render() {\r\n        \r\n        let renderListHeader\r\n        let renderListItems\r\n\r\n        if (this.props.teams) {\r\n            renderListHeader = <TeamListHeader />\r\n            renderListItems = this.props.teams.map(team => <TeamListItem key={team.id} team={team} />)\r\n        } else if (this.props.team) {\r\n            renderListHeader = <TeamSeasonsListHeader />\r\n            renderListItems = this.props.team.seasons.map(season => <TeamSeasonListItem key={season.id} season={season} team={this.props.team} />)\r\n        }\r\n        \r\n        return (\r\n            <div className=\"ui three column grid\">\r\n                <div className=\"column\">\r\n                    \r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"container ui center aligned\">\r\n                        <table>\r\n                            {renderListHeader}\r\n                            {renderListItems}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport List from '../components/List'\r\n\r\nexport class IndexContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui center aligned container\">\r\n                <List team={this.props.team} teams={this.props.teams} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(IndexContainer)\r\n","import React from 'react';\r\n\r\nconst PlayerBio = (props) => {\r\n\r\n    const { player } = props\r\n    const { teams } = props\r\n\r\n    let renderTeamLogos = teams.map(team => <img className=\"ui tiny image\" src={team.logo} alt={team.full_name}/>)\r\n    // debugger\r\n    return (\r\n        <div className=\"ui internally celled grid\">\r\n            <div className=\"row\">\r\n                <div className=\"eight wide column\">\r\n                    <h1 className=\"ui header\">\r\n                        {player.first_name} {player.last_name}\r\n                        <div className=\"sub header\">Position: {player.position}</div>\r\n                        <div className=\"sub header\">Height: {player.height_feet}'{player.height_inches}\"</div>\r\n                        <div className=\"sub header\">Weight: {player.weight_pounds}</div>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"eight wide column\">\r\n                    <div className=\"ui tiny images\">\r\n                        {renderTeamLogos}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerBio;\r\n\r\n","import React from 'react';\r\n\r\nconst PlayerStatHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr className=\"center aligned\">\r\n                <th>Name</th>\r\n                <th>Team</th>\r\n                <th>GP</th>\r\n                <th>FG</th>\r\n                <th>FGA</th>\r\n                <th>3P</th>\r\n                <th>3PA</th>\r\n                <th>FT</th>\r\n                <th>FTA</th>\r\n                <th>ORB</th>\r\n                <th>DRB</th>\r\n                <th>TRB</th>\r\n                <th>AST</th>\r\n                <th>STL</th>\r\n                <th>BLK</th>\r\n                <th>TO</th>\r\n                <th>PF</th>\r\n                <th>PTS</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default PlayerStatHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst PlayerAvgHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr className=\"center aligned\">\r\n                <th>Name</th>\r\n                <th>Team</th>\r\n                <th>GP</th>\r\n                <th>FG</th>\r\n                <th>FGA</th>\r\n                <th>FG%</th>\r\n                <th>3P</th>\r\n                <th>3PA</th>\r\n                <th>3P%</th>\r\n                <th>FT</th>\r\n                <th>FTA</th>\r\n                <th>FT%</th>\r\n                <th>ORB</th>\r\n                <th>DRB</th>\r\n                <th>TRB</th>\r\n                <th>AST</th>\r\n                <th>STL</th>\r\n                <th>BLK</th>\r\n                <th>TO</th>\r\n                <th>PF</th>\r\n                <th>PTS</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default PlayerAvgHeader;","import React from 'react';\r\n\r\nconst PlayerStatItem = (props) => {\r\n\r\n    const { stat } = props\r\n\r\n    return (\r\n        <tr className=\"center aligned\">\r\n            <td>{stat.season.year}</td>\r\n            <td>{stat.season.team.full_name}</td>\r\n            <td>{stat.gp}</td>\r\n            <td>{stat.fgm}</td>\r\n            <td>{stat.fga}</td>\r\n            <td>{stat.fg3m}</td>\r\n            <td>{stat.fg3a}</td>\r\n            <td>{stat.ftm}</td>\r\n            <td>{stat.fta}</td>\r\n            <td>{stat.oreb}</td>\r\n            <td>{stat.dreb}</td>\r\n            <td>{stat.reb}</td>\r\n            <td>{stat.ast}</td>\r\n            <td>{stat.stl}</td>\r\n            <td>{stat.blk}</td>\r\n            <td>{stat.turnover}</td>\r\n            <td>{stat.pf}</td>\r\n            <td>{stat.pts}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default PlayerStatItem;\r\n","import React from 'react';\r\n\r\nconst SeasonAvgItem = (props) => {\r\n\r\n    const { stat } = props\r\n\r\n    return (\r\n        <tr className=\"center aligned\">\r\n            <td>{stat.season.year}</td>\r\n            <td>{stat.season.team.full_name}</td>\r\n            <td>{stat.gp}</td>\r\n            <td>{Math.round((stat.fgm/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fga/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fgm/stat.fga) * 1000)/1000}</td>\r\n            <td>{Math.round((stat.fg3m/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fg3a/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fg3m/stat.fg3a) * 1000)/1000}</td>\r\n            <td>{Math.round((stat.ftm/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fta/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.ftm/stat.fta) * 1000)/1000}</td>\r\n            <td>{Math.round((stat.oreb/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.dreb/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.reb/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.ast/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.stl/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.blk/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.turnover/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.pf/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.pts/stat.gp) * 10)/10}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default SeasonAvgItem;","import React, { Component } from 'react';\r\nimport PlayerStatHeader from '../components/PlayerStatHeader'\r\nimport PlayerAvgHeader from '../components/PlayerAvgHeader'\r\nimport PlayerStatItem from '../components/PlayerStatItem'\r\nimport SeasonAvgItem from '../components/SeasonAvgItem'\r\n\r\nexport class PlayerStatList extends Component {\r\n\r\n    state = {\r\n        stats: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`https://nba-showdown.herokuapp.com/players/${this.props.playerId}/stats`)\r\n        .then(r => r.json())\r\n        .then(stats => {\r\n            this.setState({\r\n                stats: stats.sort(function(a, b){return a.season.year - b.season.year})\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let renderListItems = this.state.stats.map(stat => <PlayerStatItem key={stat.id} stat={stat}/>)\r\n        let renderAvgItems = this.state.stats.map(stat => <SeasonAvgItem key={stat.id} stat={stat}/>)\r\n        \r\n        return (\r\n            <div className=\"container ui center aligned\">\r\n                <h2>Per Game Averages</h2>\r\n                <table className=\"ui striped selectable celled small table\">\r\n                    <PlayerAvgHeader />\r\n                    <tbody>\r\n                    {renderAvgItems}\r\n                    </tbody>\r\n                </table>\r\n                <h2>Season Totals</h2>\r\n                <table className=\"ui striped selectable celled small table\">\r\n                    <PlayerStatHeader />\r\n                    <tbody>\r\n                    {renderListItems}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerStatList;\r\n","import React, { Component } from 'react';\r\nimport PlayerBio from '../components/PlayerBio'\r\nimport PlayerStatList from '../containers/PlayerStatList'\r\n\r\nexport class PlayerShowContainer extends Component {\r\n\r\n    state = {\r\n        player: {},\r\n        teams: []\r\n    }\r\n\r\n    componentWillMount(){\r\n        fetch(`https://nba-showdown.herokuapp.com/players/${this.props.playerId}`)\r\n        .then(r => r.json())\r\n        .then(player => {\r\n            this.setState({\r\n                player: player\r\n            })\r\n        })\r\n        fetch(`https://nba-showdown.herokuapp.com/players/${this.props.playerId}/teams`)\r\n        .then(r => r.json())\r\n        .then(teams => {\r\n            this.setState({\r\n                teams: teams\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PlayerBio key={this.state.player.id} teams={this.state.teams} player={this.state.player}/>\r\n                <div className=\"ui divider\"></div>\r\n                <PlayerStatList playerId={this.props.playerId} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerShowContainer;\r\n","import React, { Component } from 'react';\r\n\r\nexport class ComparePlayerListItem extends Component {\r\n\r\n  handleClick = () => {\r\n    this.props.handlePlayerClick(this.props.player)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"item\" onClick={this.handleClick}>\r\n          {this.props.player.full_name}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComparePlayerListItem;\r\n","import React, { Component } from 'react';\r\n\r\nexport class ComparePlayerSeasons extends Component {\r\n\r\n  handleClick = () => {\r\n    this.props.handleSeasonClick(this.props.season)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"item\" onClick={this.handleClick}>\r\n        {this.props.season.season.year}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComparePlayerSeasons;\r\n","import React, { Component } from 'react';\r\n\r\nexport class CompareInput extends Component {\r\n\r\n  handleKeyDown = (event) => {\r\n    this.props.handleKeyDown(event)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"ui segment thing\">\r\n        <div className=\"ui blue inverted form\">\r\n          <label>Player Name</label>\r\n          <input placeholder='Enter a name' onKeyDown={this.handleKeyDown} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompareInput;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport ComparePlayerListItem from '../components/ComparePlayerListItem'\r\nimport ComparePlayerSeasons from '../components/ComparePlayerSeasons'\r\nimport CompareInput from '../components/CompareInput'\r\n\r\nexport class CompareCard extends Component {\r\n\r\n  state = {\r\n      displayPlayers: [],\r\n      selectedPlayer: null,\r\n      selectedPlayerSeasons: []\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n      if (event.key === 'Enter') {\r\n        let input = event.target.value\r\n        this.setState({\r\n            displayPlayers: this.props.players.filter(player => player.full_name.toLowerCase().includes(input))\r\n        })\r\n      }\r\n  }\r\n\r\n  handlePlayerClick = (player) => {\r\n      fetch(`https://nba-showdown.herokuapp.com/players/${player.id}/stats`)\r\n      .then(r => r.json())\r\n      .then(seasons => {\r\n        // debugger\r\n          this.setState({\r\n              displayPlayers: [],\r\n              selectedPlayer: player,\r\n              selectedPlayerSeasons: seasons.sort(function(a, b){return a.season.year - b.season.year})\r\n          })\r\n      })\r\n  }\r\n\r\n  handleSeasonClick = (season) => {\r\n      if (this.props.setPlayer1) {\r\n          this.props.setPlayer1(season)\r\n          this.setState({\r\n              selectedPlayerSeasons: null,\r\n              selectedPlayer: null\r\n          })\r\n      } else {\r\n          this.props.setPlayer2(season)\r\n          this.setState({\r\n              selectedPlayerSeasons: null,\r\n              selectedPlayer: null\r\n          })\r\n      }\r\n  }\r\n  \r\n  render() {\r\n      \r\n      let renderPlayers = this.state.displayPlayers.map(player => <ComparePlayerListItem key={player.id} player={player} handlePlayerClick={this.handlePlayerClick}/>)\r\n      let renderPlayerSeasons = this.state.selectedPlayerSeasons.map(season => <ComparePlayerSeasons key={season.id} season={season} handleSeasonClick={this.handleSeasonClick}/>)\r\n      \r\n      return (\r\n        <>\r\n          {this.state.selectedPlayer ? null : <CompareInput handleKeyDown={this.handleKeyDown}/>}\r\n          <div className=\"ui selection list\">\r\n            {this.state.selectedPlayer ? this.state.selectedPlayer.full_name : renderPlayers}\r\n            {this.state.selectedPlayer ? renderPlayerSeasons : null}\r\n          </div>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { players: state.players }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CompareCard);\r\n","import React from 'react';\r\n\r\nconst CompareBio = (props) => {\r\n\r\n    const { seasonStat } = props\r\n\r\n    return (\r\n        <div className=\"ui centered card\">\r\n            <div className=\"content\">\r\n                <div className=\"header\">{seasonStat.player.first_name} {seasonStat.player.last_name}</div>\r\n                <div className=\"ui list\">\r\n                    <div className=\"item\">Position: {seasonStat.player.position}</div>\r\n                    <div className=\"item\">Height: {seasonStat.player.height_feet}'{seasonStat.player.height_inches}\"</div>\r\n                    <div className=\"item\">Weight: {seasonStat.player.weight_pounds} lbs</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompareBio;\r\n","import React from 'react';\r\n\r\nconst CompareStatRow = (props) => {\r\n  return (\r\n    <tr className=\"center aligned\">\r\n      <td className={props.statclass1}>\r\n        {props.stat1}\r\n      </td>\r\n      <th className=\"two wide\">\r\n        {props.stat}\r\n      </th>\r\n      <td className={props.statclass2}>\r\n        {props.stat2}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default CompareStatRow;\r\n","import React from 'react';\r\nimport CompareStatRow from '../components/CompareStatRow'\r\n\r\nconst CompareStats = (props) => {\r\n\r\n  const { player1stats } = props\r\n  const { player2stats } = props\r\n\r\n  return (\r\n    <>\r\n    <h2>Season Total</h2>\r\n    <table className=\"ui small selectable celled table\">\r\n      <tbody>\r\n        <CompareStatRow stat={\"Season\"} stat1={player1stats.season.year} stat2={player2stats.season.year}/>\r\n        {player1stats.gp > player2stats.gp ? <CompareStatRow stat={\"GP\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.gp} stat2={player2stats.gp}/> : <CompareStatRow stat={\"GP\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.gp} stat2={player2stats.gp}/>}\r\n        {player1stats.fgm > player2stats.fgm ? <CompareStatRow stat={\"FGM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.fgm} stat2={player2stats.fgm}/> : <CompareStatRow stat={\"FGM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.fgm} stat2={player2stats.fgm}/>}\r\n        {player1stats.fga > player2stats.fga ? <CompareStatRow stat={\"FGA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.fga} stat2={player2stats.fga}/> : <CompareStatRow stat={\"FGA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.fga} stat2={player2stats.fga}/>}\r\n        {player1stats.fg3m > player2stats.fg3m ? <CompareStatRow stat={\"3PM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.fg3m} stat2={player2stats.fg3m}/> : <CompareStatRow stat={\"3PM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.fg3m} stat2={player2stats.fg3m}/>}\r\n        {player1stats.fg3a > player2stats.fg3a ? <CompareStatRow stat={\"3PA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.fg3a} stat2={player2stats.fg3a}/> : <CompareStatRow stat={\"3PA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.fg3a} stat2={player2stats.fg3a}/>}\r\n        {player1stats.ftm > player2stats.ftm ? <CompareStatRow stat={\"FTM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.ftm} stat2={player2stats.ftm}/> : <CompareStatRow stat={\"FTM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.ftm} stat2={player2stats.ftm}/>}\r\n        {player1stats.fta > player2stats.fta ? <CompareStatRow stat={\"FGA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.fta} stat2={player2stats.fta}/> : <CompareStatRow stat={\"FTA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.fta} stat2={player2stats.fta}/>}\r\n        {player1stats.oreb > player2stats.oreb ? <CompareStatRow stat={\"OREB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.oreb} stat2={player2stats.oreb}/> : <CompareStatRow stat={\"OREB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.oreb} stat2={player2stats.oreb}/>}\r\n        {player1stats.dreb > player2stats.dreb ? <CompareStatRow stat={\"DREB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.dreb} stat2={player2stats.dreb}/> : <CompareStatRow stat={\"DREB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.dreb} stat2={player2stats.dreb}/>}\r\n        {player1stats.reb > player2stats.reb ? <CompareStatRow stat={\"REB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.reb} stat2={player2stats.reb}/> : <CompareStatRow stat={\"REB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.reb} stat2={player2stats.reb}/>}\r\n        {player1stats.ast > player2stats.ast ? <CompareStatRow stat={\"AST\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.fgm} stat2={player2stats.fgm}/> : <CompareStatRow stat={\"FGM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.fgm} stat2={player2stats.fgm}/>}\r\n        {player1stats.stl > player2stats.stl ? <CompareStatRow stat={\"STL\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.stl} stat2={player2stats.stl}/> : <CompareStatRow stat={\"STL\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.stl} stat2={player2stats.stl}/>}\r\n        {player1stats.blk > player2stats.blk ? <CompareStatRow stat={\"BLK\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.blk} stat2={player2stats.blk}/> : <CompareStatRow stat={\"BLK\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.blk} stat2={player2stats.blk}/>}\r\n        {player1stats.turnover > player2stats.turnover ? <CompareStatRow stat={\"TO\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.turnover} stat2={player2stats.turnover}/> : <CompareStatRow stat={\"TO\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.turnover} stat2={player2stats.turnover}/>}\r\n        {player1stats.pf > player2stats.pf ? <CompareStatRow stat={\"PF\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.pf} stat2={player2stats.pf}/> : <CompareStatRow stat={\"PF\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.pf} stat2={player2stats.pf}/>}\r\n        {player1stats.pts > player2stats.pts ? <CompareStatRow stat={\"PTS\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={player1stats.pts} stat2={player2stats.pts}/> : <CompareStatRow stat={\"PTS\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={player1stats.pts} stat2={player2stats.pts}/>}\r\n      </tbody>\r\n    </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompareStats;\r\n\r\n","import React from 'react';\r\nimport CompareStatRow from '../components/CompareStatRow'\r\n\r\nconst CompareStats = (props) => {\r\n\r\n  const { player1stats } = props\r\n  const { player2stats } = props\r\n\r\n  const round = (num) => {\r\n    return Math.round(num * 10)/10\r\n  }\r\n\r\n  // debugger\r\n  return (\r\n    <>\r\n    <h2>Season Averages</h2>\r\n    <table className=\"ui small selectable celled table\">\r\n      <tbody>\r\n        <CompareStatRow stat={\"Season\"} stat1={player1stats.season.year} stat2={player2stats.season.year}/>\r\n        {round(player1stats.fgm/player1stats.gp) > round(player2stats.fgm/player2stats.gp) ? <CompareStatRow stat={\"FGM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.fgm/player1stats.gp)} stat2={round(player2stats.fgm/player2stats.gp)}/> : <CompareStatRow stat={\"FGM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.fgm/player1stats.gp)} stat2={round(player2stats.fgm/player2stats.gp)}/>}\r\n        {round(player1stats.fga/player1stats.gp) > round(player2stats.fga/player2stats.gp) ? <CompareStatRow stat={\"FGA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.fga/player1stats.gp)} stat2={round(player2stats.fga/player2stats.gp)}/> : <CompareStatRow stat={\"FGA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.fga/player1stats.gp)} stat2={round(player2stats.fga/player2stats.gp)}/>}\r\n        {round(player1stats.fg3m/player1stats.gp) > round(player2stats.fg3m/player2stats.gp) ? <CompareStatRow stat={\"3PM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.fg3m/player1stats.gp)} stat2={round(player2stats.fg3m/player2stats.gp)}/> : <CompareStatRow stat={\"3PM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.fg3m/player1stats.gp)} stat2={round(player2stats.fg3m/player2stats.gp)}/>}\r\n        {round(player1stats.fg3a/player1stats.gp) > round(player2stats.fg3a/player2stats.gp) ? <CompareStatRow stat={\"3PA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.fg3a/player1stats.gp)} stat2={round(player2stats.fg3a/player2stats.gp)}/> : <CompareStatRow stat={\"3PA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.fg3a/player1stats.gp)} stat2={round(player2stats.fg3a/player2stats.gp)}/>}\r\n        {round(player1stats.ftm/player1stats.gp) > round(player2stats.ftm/player2stats.gp) ? <CompareStatRow stat={\"FTM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.ftm/player1stats.gp)} stat2={round(player2stats.ftm/player2stats.gp)}/> : <CompareStatRow stat={\"FTM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.ftm/player1stats.gp)} stat2={round(player2stats.ftm/player2stats.gp)}/>}\r\n        {round(player1stats.fta/player1stats.gp) > round(player2stats.fta/player2stats.gp) ? <CompareStatRow stat={\"FTA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.fta/player1stats.gp)} stat2={round(player2stats.fta/player2stats.gp)}/> : <CompareStatRow stat={\"FTA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.fta/player1stats.gp)} stat2={round(player2stats.fta/player2stats.gp)}/>}\r\n        {round(player1stats.oreb/player1stats.gp) > round(player2stats.oreb/player2stats.gp) ? <CompareStatRow stat={\"OREB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.oreb/player1stats.gp)} stat2={round(player2stats.oreb/player2stats.gp)}/> : <CompareStatRow stat={\"OREB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.oreb/player1stats.gp)} stat2={round(player2stats.oreb/player2stats.gp)}/>}\r\n        {round(player1stats.dreb/player1stats.gp) > round(player2stats.dreb/player2stats.gp) ? <CompareStatRow stat={\"DREB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.dreb/player1stats.gp)} stat2={round(player2stats.dreb/player2stats.gp)}/> : <CompareStatRow stat={\"DREB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.dreb/player1stats.gp)} stat2={round(player2stats.dreb/player2stats.gp)}/>}\r\n        {round(player1stats.reb/player1stats.gp) > round(player2stats.reb/player2stats.gp) ? <CompareStatRow stat={\"REB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.reb/player1stats.gp)} stat2={round(player2stats.reb/player2stats.gp)}/> : <CompareStatRow stat={\"REB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.reb/player1stats.gp)} stat2={round(player2stats.reb/player2stats.gp)}/>}\r\n        {round(player1stats.ast/player1stats.gp) > round(player2stats.ast/player2stats.gp) ? <CompareStatRow stat={\"AST\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.ast/player1stats.gp)} stat2={round(player2stats.ast/player2stats.gp)}/> : <CompareStatRow stat={\"FGM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.ast/player1stats.gp)} stat2={round(player2stats.ast/player2stats.gp)}/>}\r\n        {round(player1stats.stl/player1stats.gp) > round(player2stats.stl/player2stats.gp) ? <CompareStatRow stat={\"STL\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.stl/player1stats.gp)} stat2={round(player2stats.stl/player2stats.gp)}/> : <CompareStatRow stat={\"STL\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.stl/player1stats.gp)} stat2={round(player2stats.stl/player2stats.gp)}/>}\r\n        {round(player1stats.blk/player1stats.gp) > round(player2stats.blk/player2stats.gp) ? <CompareStatRow stat={\"BLK\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.blk/player1stats.gp)} stat2={round(player2stats.blk/player2stats.gp)}/> : <CompareStatRow stat={\"BLK\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.blk/player1stats.gp)} stat2={round(player2stats.blk/player2stats.gp)}/>}\r\n        {round(player1stats.turnover/player1stats.gp) > round(player2stats.turnover/player2stats.gp) ? <CompareStatRow stat={\"TO\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.turnover/player1stats.gp)} stat2={round(player2stats.turnover/player2stats.gp)}/> : <CompareStatRow stat={\"TO\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.turnover/player1stats.gp)} stat2={round(player2stats.turnover/player2stats.gp)}/>}\r\n        {round(player1stats.pf/player1stats.gp) > round(player2stats.pf/player2stats.gp) ? <CompareStatRow stat={\"PF\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.pf/player1stats.gp)} stat2={round(player2stats.pf/player2stats.gp)}/> : <CompareStatRow stat={\"PF\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.pf/player1stats.gp)} stat2={round(player2stats.pf/player2stats.gp)}/>}\r\n        {round(player1stats.pts/player1stats.gp) > round(player2stats.pts/player2stats.gp) ? <CompareStatRow stat={\"PTS\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={round(player1stats.pts/player1stats.gp)} stat2={round(player2stats.pts/player2stats.gp)}/> : <CompareStatRow stat={\"PTS\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={round(player1stats.pts/player1stats.gp)} stat2={round(player2stats.pts/player2stats.gp)}/>}\r\n      </tbody>\r\n    </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompareStats;","import React, { Component } from 'react';\r\nimport CompareCard from '../components/CompareCard'\r\nimport CompareBio from '../components/CompareBio'\r\nimport CompareStats from '../components/CompareStats'\r\nimport CompareAvgStats from '../components/CompareAvgStats'\r\n\r\nexport class CompareContainer extends Component {\r\n\r\n    state = {\r\n        player1: null,\r\n        player2: null\r\n    }\r\n\r\n    setPlayer1 = (seasonStat) => {\r\n        this.setState({\r\n            player1: seasonStat\r\n        })\r\n    }\r\n\r\n    setPlayer2 = (seasonStat) => {\r\n        this.setState({\r\n            player2: seasonStat\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                <h4 className=\"ui horizontal divider header\">\r\n                    <i className=\"sync icon\"></i>\r\n                    Compare Players\r\n                </h4>\r\n                <br></br>\r\n                <div className=\"ui two column grid\">\r\n                    <div className=\"column\">\r\n                        {this.state.player1 ? <CompareBio seasonStat={this.state.player1} /> : <CompareCard setPlayer1={this.setPlayer1}/>}\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        {this.state.player2 ? <CompareBio seasonStat={this.state.player2} /> : <CompareCard setPlayer2={this.setPlayer2}/>} \r\n                    </div>\r\n                </div>\r\n                {this.state.player1 && this.state.player2 ? <CompareStats player1stats={this.state.player1} player2stats={this.state.player2}/> : null}\r\n                {this.state.player1 && this.state.player2 ? <CompareAvgStats player1stats={this.state.player1} player2stats={this.state.player2}/> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompareContainer;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport class HomeContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ui center aligned container\">\r\n                <div className=\"ui grid\">\r\n\r\n                    <header className=\"ui container\" id=\"title\">\r\n                        <h1 className=\"ui center aligned icon header sign\" style={{\r\n                            color: \"rgb(238, 135, 51)\",\r\n                            background: \"rgb(0, 0, 0)\",\r\n                            background: \"rgba(0, 0, 0, 0.05)\",\r\n                            width: \"100%\",\r\n                            padding: \"15px\",\r\n                            }}>\r\n                            <div className=\"ui hidden divider\"></div>\r\n                            <i className=\"basketball ball icon\"/>\r\n                            NBA Showdown\r\n                        </h1>\r\n                        <p className=\"desc\" style={{color: \"rgb(29, 66, 138)\"}}>The Ultimate NBA Reference Application</p>\r\n                    </header>\r\n\r\n                    <div className=\"ui hidden divider\"></div>\r\n                    <div className=\"ui hidden divider\"></div>\r\n                    <div className=\"ui hidden divider\"></div>\r\n\r\n                    <div className=\"two column row\">\r\n                        <div className=\"column\">\r\n                            <img className=\"ui large rounded image\" src=\"https://i.imgur.com/kuyqOdO.png\" alt=\"Player Profile\"/>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <h2 className=\"header\">Player Profiles</h2>\r\n                            <br></br>\r\n                            <div className=\"description\">\r\n                                <p>View individual player profile and statistics including per-game-averages and season totals.</p>\r\n                                <p>Includes every player that has played in the NBA from 1979 to 2019.</p>\r\n                                <br></br>\r\n                                <NavLink to=\"/players\">\r\n                                    <button className=\"ui inverted orange button\">Search for Player</button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ui hidden divider\"></div>\r\n                    <div className=\"ui hidden divider\"></div>\r\n\r\n                    <div className=\"two column row\">\r\n                        <div className=\"column\">\r\n                            <h2 className=\"header\">Team Season Profiles</h2>\r\n                            <br></br>\r\n                            <div className=\"description\">\r\n                                <p>View team stats from a specific season.</p>\r\n                                <p>See season stats of every player who played on that team that year.</p>\r\n                                <br></br>\r\n                                <NavLink to=\"/teams\">\r\n                                    <button className=\"ui inverted orange button\">View All Teams</button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <img className=\"ui large rounded image\" src=\"https://i.imgur.com/bVFypps.png\" alt=\"Team Profile\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ui hidden divider\"></div>\r\n                    <div className=\"ui hidden divider\"></div>\r\n\r\n                    <div className=\"two column row\">\r\n                        <div className=\"column\">\r\n                            <img className=\"ui large rounded image\" src=\"https://i.imgur.com/QHy2sjA.png\" alt=\"Player Comparison Chart\"/>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <h2 className=\"header\">Player Comparison Chart</h2>\r\n                            <br></br>\r\n                            <div className=\"description\">\r\n                                <p>Compare players from across the generations</p>\r\n                                <p>Dynamically view the better performance based on season totals and averages</p>\r\n                                <br></br>\r\n                                <NavLink to=\"/compareplayers\">\r\n                                    <button className=\"ui inverted orange button\">Compare Players</button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"ui hidden divider\"></div>\r\n                    <div className=\"ui hidden divider\"></div>\r\n\r\n                    <div className=\"two column row\">\r\n                        <div className=\"column\">\r\n                            <h2 className=\"header\">Simulate Game</h2>\r\n                            <br></br>\r\n                            <div className=\"description\">\r\n                                <p>Simulate a game between teams from any era.</p>\r\n                                <p>View the box score of the simulated game, with accurate and reliable results.</p>\r\n                                <br></br>\r\n                                <NavLink to=\"/simulate\">\r\n                                    <button className=\"ui inverted orange button\">Simulate a Game</button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <img className=\"ui large rounded image\" src=\"https://i.imgur.com/AVGQO4p.png\" alt=\"Simulation of Game\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br></br>\r\n                </div>\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\n\r\nconst TeamRosterListHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr className=\"center aligned\">\r\n                <th >Name</th>\r\n                <th>G</th>\r\n                <th>FG</th>\r\n                <th>FGA</th>\r\n                <th>3P</th>\r\n                <th>3PA</th>\r\n                <th>FT</th>\r\n                <th>FTA</th>\r\n                <th>ORB</th>\r\n                <th>DRB</th>\r\n                <th>TRB</th>\r\n                <th>AST</th>\r\n                <th>STL</th>\r\n                <th>BLK</th>\r\n                <th>TO</th>\r\n                <th>PF</th>\r\n                <th>PTS</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default TeamRosterListHeader;","import React from 'react';\r\n\r\nconst TeamRosterAvgHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr className=\"center aligned\">\r\n                <th >Name</th>\r\n                <th>G</th>\r\n                <th>FG</th>\r\n                <th>FGA</th>\r\n                <th>FG%</th>\r\n                <th>3P</th>\r\n                <th>3PA</th>\r\n                <th>3P%</th>\r\n                <th>FT</th>\r\n                <th>FTA</th>\r\n                <th>FT%</th>\r\n                <th>ORB</th>\r\n                <th>DRB</th>\r\n                <th>TRB</th>\r\n                <th>AST</th>\r\n                <th>STL</th>\r\n                <th>BLK</th>\r\n                <th>TO</th>\r\n                <th>PF</th>\r\n                <th>PTS</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default TeamRosterAvgHeader;","import React, {Component} from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport class TeamRosterListItem extends Component {\r\n   \r\n    render(){\r\n\r\n        const { stat } = this.props\r\n\r\n        return (\r\n            <tr className=\"center aligned\">\r\n                <td>\r\n                    <NavLink to={\"/players/\" + stat.player.id }>{stat.player.first_name} {stat.player.last_name}</NavLink>\r\n                </td>\r\n                <td>{stat.gp}</td>\r\n                <td>{stat.fgm}</td>\r\n                <td>{stat.fga}</td>\r\n                <td>{stat.fg3m}</td>\r\n                <td>{stat.fg3a}</td>\r\n                <td>{stat.ftm}</td>\r\n                <td>{stat.fta}</td>\r\n                <td>{stat.oreb}</td>\r\n                <td>{stat.dreb}</td>\r\n                <td>{stat.reb}</td>\r\n                <td>{stat.ast}</td>\r\n                <td>{stat.stl}</td>\r\n                <td>{stat.blk}</td>\r\n                <td>{stat.turnover}</td>\r\n                <td>{stat.pf}</td>\r\n                <td>{stat.pts}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamRosterListItem;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst TeamRosterAvgItem = (props) => {\r\n\r\n    const { stat } = props\r\n    \r\n    return (\r\n        <tr className=\"center aligned\">\r\n            <td>\r\n                <NavLink to={\"/players/\" + stat.player.id }>{stat.player.first_name} {stat.player.last_name}</NavLink>\r\n            </td>\r\n            <td>{stat.gp}</td>\r\n            <td>{Math.round((stat.fgm/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fga/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fgm/stat.fga) * 1000)/1000}</td>\r\n            <td>{Math.round((stat.fg3m/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fg3a/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fg3m/stat.fg3a) * 1000)/1000}</td>\r\n            <td>{Math.round((stat.ftm/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.fta/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.ftm/stat.fta) * 1000)/1000}</td>\r\n            <td>{Math.round((stat.oreb/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.dreb/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.reb/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.ast/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.stl/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.blk/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.turnover/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.pf/stat.gp) * 10)/10}</td>\r\n            <td>{Math.round((stat.pts/stat.gp) * 10)/10}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TeamRosterAvgItem;","import React, { Component } from 'react';\r\n\r\nexport class TeamBio extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui grid\">\r\n            <div className=\"row\">\r\n                <div className=\"ten wide column\">\r\n                    <h1 className=\"ui header\">\r\n                        {this.props.team.full_name}\r\n                        <div className=\"sub header\">Conference: {this.props.team.conference}</div>\r\n                        <div className=\"sub header\">Division: {this.props.team.division}</div>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"six wide column\">\r\n                    <div className=\"ui tiny images\">\r\n                      <img className=\"ui tiny image\" src={this.props.team.logo} alt={this.props.team.full_name}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamBio;\r\n","import React, { Component } from 'react';\r\nimport TeamRosterListHeader from '../components/TeamRosterListHeader'\r\nimport TeamRosterAvgHeader from '../components/TeamRosterAvgHeader'\r\nimport TeamRosterListItem from '../components/TeamRosterListItem'\r\nimport TeamRosterAvgItem from '../components/TeamRosterAvgItem'\r\nimport TeamBio from '../components/TeamBio'\r\n\r\nexport class TeamRosterContainer extends Component {\r\n\r\n    state = {\r\n        rosterStats: [],\r\n        team: {},\r\n        year: 0\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`https://nba-showdown.herokuapp.com/teams/${this.props.teamId}/${this.props.seasonId}`)\r\n        .then(r => r.json())\r\n        .then(rosterStats => {\r\n            this.setState({\r\n                rosterStats: rosterStats.sort(function(a, b) {\r\n                    return b.gp - a.gp\r\n                })\r\n            })\r\n        })\r\n        fetch(`https://nba-showdown.herokuapp.com/teams/${this.props.teamId}`)\r\n        .then(r => r.json())\r\n        .then(team => {\r\n            this.setState({\r\n                team: team\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let renderListItems = this.state.rosterStats.map(stat => <TeamRosterListItem key={stat.id} stat={stat}/>)\r\n        let renderAvgItems = this.state.rosterStats.map(stat => <TeamRosterAvgItem key={stat.id} stat={stat}/>)\r\n        return (\r\n            <div className=\"container ui center aligned\">\r\n                <TeamBio team={this.state.team} year={this.state.rosterStats[0]}/>\r\n                <br></br>\r\n                <h2>Season Averages</h2>\r\n                <table className=\"ui selectable striped celled small table\">\r\n                    <TeamRosterAvgHeader />\r\n                    <tbody>\r\n                    {renderAvgItems}\r\n                    </tbody>\r\n                </table>\r\n                <h2>Season Totals</h2>\r\n                <table className=\"ui selectable striped celled small table\">\r\n                    <TeamRosterListHeader />\r\n                    <tbody>\r\n                    {renderListItems}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamRosterContainer;\r\n","import React, { Component } from 'react';\r\n\r\nexport class SearchBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ui search center aligned\">\r\n                <div className=\"ui icon input\">\r\n                <input className=\"prompt\" onChange={this.props.onChange} />\r\n                <i className=\"search icon\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport class PlayerListItem extends Component {\r\n    render() {\r\n        const {player} = this.props\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"content\">\r\n                    <h6 className=\"header\">\r\n                        <NavLink to={\"/players/\" + player.id}>{player.first_name} {player.last_name}</NavLink>\r\n                    </h6>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerListItem;\r\n","import React, { Component } from 'react';\r\nimport PlayerListItem from '../components/PlayerListItem'\r\n\r\nexport class PlayerList extends Component {\r\n    render() {\r\n\r\n        const renderPlayers = this.props.players.map(player => <PlayerListItem key={player.id} player={player}/>)\r\n\r\n        return (\r\n            <div className=\"ui very relaxed animated list\">\r\n                {renderPlayers}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport SearchBar from '../components/SearchBar'\r\nimport PlayerList from '../containers/PlayerList'\r\n\r\nexport class PlayersContainer extends Component {\r\n\r\n    state = {\r\n        displayPlayers: []\r\n    }\r\n\r\n    filterPlayers = (event) => {\r\n        let input = event.target.value.toLowerCase()\r\n        if(event.target.value === \"\") {\r\n            this.setState({\r\n                displayPlayers: []\r\n            })\r\n        } else {\r\n            this.setState({\r\n                displayPlayers: this.props.players.filter(player => player.full_name.toLowerCase().includes(input))\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container center aligned\">\r\n                <h4 class=\"ui horizontal divider header\">\r\n                    <i class=\"basketball ball icon\"></i>\r\n                    Search Players\r\n                </h4>\r\n                <br></br>\r\n                <SearchBar onChange={this.filterPlayers} />\r\n                <PlayerList players={this.state.displayPlayers} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { players: state.players }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PlayersContainer);\r\n","import React, { Component } from 'react';\r\n\r\nexport class CompareTeamBio extends Component {\r\n\r\n  handleClick = () => {\r\n    if (this.props.resetTeam1) {\r\n      this.props.resetTeam1()\r\n    } else {\r\n      this.props.resetTeam2()\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n      <div>\r\n        <img src={this.props.team.logo} alt={this.props.team.full_name} style={{\r\n          width: \"100px\",\r\n          height: \"100%\"\r\n        }}/>\r\n      </div>\r\n      <div>\r\n        <h2 className=\"header\">{this.props.team.full_name}</h2>\r\n        {this.props.roster.length === 0 ? <button onClick={this.handleClick}>Try Another Team</button> : <h3>{this.props.roster[0].season.year}</h3>}\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompareTeamBio;\r\n","import React, { Component } from 'react';\r\n\r\nexport class CompareTeamListItem extends Component {\r\n\r\n  handleClick = () => {\r\n    this.props.handleTeamClick(this.props.team)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"item\" onClick={this.handleClick}>\r\n        {this.props.team.full_name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompareTeamListItem;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport class CompareTeamSeason extends Component {\r\n\r\n  handleClick = () => {\r\n    fetch(`https://nba-showdown.herokuapp.com/teams/${this.props.season.team_id}/${this.props.season.year}`)\r\n    .then(r => r.json())\r\n    .then(roster => {\r\n      this.props.handleSeasonClick(roster)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"item\" onClick={this.handleClick}>\r\n        {this.props.season.year}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompareTeamSeason;\r\n","import React, { Component } from 'react';\r\nimport CompareTeamListItem from '../components/CompareTeamListItem'\r\nimport CompareTeamSeason from '../components/CompareTeamSeason'\r\nimport { connect } from 'react-redux'\r\n\r\nexport class CompareTeamCard extends Component {\r\n\r\n  state = {\r\n    selectedTeam: null,\r\n    seasons: []\r\n  }\r\n\r\n  handleTeamClick = (team) => {\r\n    fetch(`https://nba-showdown.herokuapp.com/teams/${team.id}`)\r\n    .then(r => r.json())\r\n    .then(res => {\r\n      this.setState({\r\n        selectedTeam: team,\r\n        seasons: res.seasons\r\n      })\r\n    })\r\n  }\r\n\r\n  handleSeasonClick = (roster) => {\r\n    if (this.props.setTeam1) {\r\n      this.props.setTeam1(roster, this.state.selectedTeam)\r\n      this.setState({\r\n          selectedTeam: null\r\n      })\r\n    } else {\r\n      this.props.setTeam2(roster, this.state.selectedTeam)\r\n      this.setState({\r\n          selectedTeam: null\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let renderTeams = this.props.teams.map(team => <CompareTeamListItem key={team.id} team={team} handleTeamClick={this.handleTeamClick}/>)\r\n    let renderTeamSeasons = this.state.seasons.map(season => <CompareTeamSeason key={season.id} season={season} handleSeasonClick={this.handleSeasonClick}/>)\r\n\r\n    return (\r\n      <div className=\"ui selection list\">\r\n        {this.state.selectedTeam ? this.state.selectedTeam.full_name : renderTeams}\r\n        {this.state.selectedTeam ? renderTeamSeasons : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { teams: state.teams }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CompareTeamCard);\r\n","import React from 'react';\r\nimport CompareStatRow from '../components/CompareStatRow'\r\n\r\nconst CompareTeamStats = (props) => {\r\n\r\n  const { team1roster } = props\r\n  const { team2roster } = props\r\n\r\n  let fga1 = 0\r\n  let fgm1 = 0\r\n  let fg3a1 = 0\r\n  let fg3m1 = 0\r\n  let fta1 = 0\r\n  let ftm1 = 0\r\n  let oreb1 = 0\r\n  let dreb1 = 0\r\n  let reb1 = 0\r\n  let ast1 = 0\r\n  let stl1 = 0\r\n  let blk1 = 0\r\n  let turnover1 = 0\r\n  let pf1 = 0\r\n  let pts1 = 0\r\n\r\n  let fga2 = 0\r\n  let fgm2 = 0\r\n  let fg3a2 = 0\r\n  let fg3m2 = 0\r\n  let fta2 = 0\r\n  let ftm2 = 0\r\n  let oreb2 = 0\r\n  let dreb2 = 0\r\n  let reb2 = 0\r\n  let ast2 = 0\r\n  let stl2 = 0\r\n  let blk2 = 0\r\n  let turnover2 = 0\r\n  let pf2 = 0\r\n  let pts2 = 0\r\n\r\n  team1roster.forEach(stat => {\r\n    fga1 += stat.fga\r\n    fgm1 += stat.fgm\r\n    fg3a1 += stat.fg3a\r\n    fg3m1 += stat.fg3m\r\n    fta1 += stat.fta\r\n    ftm1 += stat.ftm\r\n    oreb1 += stat.oreb\r\n    dreb1 += stat.dreb\r\n    reb1 += stat.reb\r\n    ast1 += stat.ast\r\n    stl1 += stat.stl\r\n    blk1 += stat.blk\r\n    turnover1 += stat.turnover\r\n    pf1 += stat.pf\r\n    pts1 += stat.pts\r\n  })\r\n\r\n  team2roster.forEach(stat => {\r\n    fga2 += stat.fga\r\n    fgm2 += stat.fgm\r\n    fg3a2 += stat.fg3a\r\n    fg3m2 += stat.fg3m\r\n    fta2 += stat.fta\r\n    ftm2 += stat.ftm\r\n    oreb2 += stat.oreb\r\n    dreb2 += stat.dreb\r\n    reb2 += stat.reb\r\n    ast2 += stat.ast\r\n    stl2 += stat.stl\r\n    blk2 += stat.blk\r\n    turnover2 += stat.turnover\r\n    pf2 += stat.pf\r\n    pts2 += stat.pts\r\n  })\r\n  \r\n  return (\r\n    <>\r\n    <h2>Season Totals</h2>\r\n    <table className=\"ui selectable celled table\">\r\n      <tbody>\r\n        <CompareStatRow stat={\"Season\"} stat1={team1roster[0].season.year} stat2={team2roster[0].season.year}/>\r\n        {fgm1 > fgm2 ? <CompareStatRow stat={\"FGM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fgm1} stat2={fgm2}/> : <CompareStatRow stat={\"FGM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fgm1} stat2={fgm2}/>}\r\n        {fga1 > fga2 ? <CompareStatRow stat={\"FGA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fga1} stat2={fga2}/> : <CompareStatRow stat={\"FGA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fga1} stat2={fga2}/>}\r\n        {fg3m1 > fg3m2 ? <CompareStatRow stat={\"3PM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fg3m1} stat2={fg3m2}/> : <CompareStatRow stat={\"3PM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fg3m1} stat2={fg3m2}/>}\r\n        {fg3a1 > fg3a2 ? <CompareStatRow stat={\"3PA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fg3a1} stat2={fg3m2}/> : <CompareStatRow stat={\"3PA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fg3a1} stat2={fg3m2}/>}\r\n        {ftm1 > ftm2 ? <CompareStatRow stat={\"FTM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={ftm1} stat2={ftm2}/> : <CompareStatRow stat={\"FTM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={ftm1} stat2={ftm2}/>}\r\n        {fta1 > fta2 ? <CompareStatRow stat={\"FTA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fta1} stat2={fta2}/> : <CompareStatRow stat={\"FTA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fta1} stat2={fta2}/>}\r\n        {oreb1 > oreb2 ? <CompareStatRow stat={\"OREB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={oreb1} stat2={oreb2}/> : <CompareStatRow stat={\"OREB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={oreb1} stat2={oreb2}/>}\r\n        {dreb1 > dreb2 ? <CompareStatRow stat={\"DREB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={dreb1} stat2={dreb2}/> : <CompareStatRow stat={\"DREB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={dreb1} stat2={dreb2}/>}\r\n        {reb1 > reb2 ? <CompareStatRow stat={\"REB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={reb1} stat2={reb2}/> : <CompareStatRow stat={\"REB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={reb1} stat2={reb2}/>}\r\n        {ast1 > ast2 ? <CompareStatRow stat={\"AST\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={ast1} stat2={ast2}/> : <CompareStatRow stat={\"AST\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={ast1} stat2={ast2}/>}\r\n        {stl1 > stl2 ? <CompareStatRow stat={\"STL\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={stl1} stat2={stl2}/> : <CompareStatRow stat={\"STL\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={stl1} stat2={stl2}/>}\r\n        {blk1 > blk2 ? <CompareStatRow stat={\"BLK\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={blk1} stat2={blk2}/> : <CompareStatRow stat={\"BLK\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={blk1} stat2={blk2}/>}\r\n        {turnover1 > turnover2 ? <CompareStatRow stat={\"TO\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={turnover1} stat2={turnover2}/> : <CompareStatRow stat={\"TO\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={turnover1} stat2={turnover2}/>}\r\n        {pf1 > pf2 ? <CompareStatRow stat={\"PF\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={pf1} stat2={pf2}/> : <CompareStatRow stat={\"PF\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={pf1} stat2={pf2}/>}\r\n        {pts1 > pts2 ? <CompareStatRow stat={\"PTS\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={pts1} stat2={pts2}/> : <CompareStatRow stat={\"PTS\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={pts1} stat2={pts2}/>}\r\n      </tbody>\r\n    </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompareTeamStats;\r\n","import React from 'react';\r\nimport CompareStatRow from '../components/CompareStatRow'\r\n\r\nconst CompareTeamAvg = (props) => {\r\n\r\n  const { team1roster } = props\r\n  const { team2roster } = props\r\n\r\n  let games1 = 82\r\n  let games2 = 82\r\n\r\n  switch(team1roster[0].season.year) {\r\n    case 1998:\r\n      games1 = 50\r\n      break\r\n    case 2011:\r\n      games1 = 66\r\n      break\r\n    default:\r\n      games1 = 82\r\n  }\r\n\r\n  switch(team2roster[0].season.year) {\r\n    case 1998:\r\n      games2 = 50\r\n      break\r\n    case 2011:\r\n      games2 = 66\r\n      break\r\n    default:\r\n      games2 = 82 \r\n  }\r\n  \r\n  let fga1 = 0\r\n  let fgm1 = 0\r\n  let fg3a1 = 0\r\n  let fg3m1 = 0\r\n  let fta1 = 0\r\n  let ftm1 = 0\r\n  let oreb1 = 0\r\n  let dreb1 = 0\r\n  let reb1 = 0\r\n  let ast1 = 0\r\n  let stl1 = 0\r\n  let blk1 = 0\r\n  let turnover1 = 0\r\n  let pf1 = 0\r\n  let pts1 = 0\r\n\r\n  let fga2 = 0\r\n  let fgm2 = 0\r\n  let fg3a2 = 0\r\n  let fg3m2 = 0\r\n  let fta2 = 0\r\n  let ftm2 = 0\r\n  let oreb2 = 0\r\n  let dreb2 = 0\r\n  let reb2 = 0\r\n  let ast2 = 0\r\n  let stl2 = 0\r\n  let blk2 = 0\r\n  let turnover2 = 0\r\n  let pf2 = 0\r\n  let pts2 = 0\r\n\r\n  team1roster.forEach(stat => {\r\n    fga1 += stat.fga\r\n    fgm1 += stat.fgm\r\n    fg3a1 += stat.fg3a\r\n    fg3m1 += stat.fg3m\r\n    fta1 += stat.fta\r\n    ftm1 += stat.ftm\r\n    oreb1 += stat.oreb\r\n    dreb1 += stat.dreb\r\n    reb1 += stat.reb\r\n    ast1 += stat.ast\r\n    stl1 += stat.stl\r\n    blk1 += stat.blk\r\n    turnover1 += stat.turnover\r\n    pf1 += stat.pf\r\n    pts1 += stat.pts\r\n  })\r\n\r\n  team2roster.forEach(stat => {\r\n    fga2 += stat.fga\r\n    fgm2 += stat.fgm\r\n    fg3a2 += stat.fg3a\r\n    fg3m2 += stat.fg3m\r\n    fta2 += stat.fta\r\n    ftm2 += stat.ftm\r\n    oreb2 += stat.oreb\r\n    dreb2 += stat.dreb\r\n    reb2 += stat.reb\r\n    ast2 += stat.ast\r\n    stl2 += stat.stl\r\n    blk2 += stat.blk\r\n    turnover2 += stat.turnover\r\n    pf2 += stat.pf\r\n    pts2 += stat.pts\r\n  })\r\n\r\n  let ptsPerGame1 = Math.round((pts1/games1)*10)/10\r\n  let fgmPerGame1 = Math.round((fgm1/games1)*10)/10\r\n  let fgaPerGame1 = Math.round((fga1/games1)*10)/10\r\n  let fgp1 = Math.round((fgm1/fga1)*1000)/1000\r\n  let fg3mPerGame1 = Math.round((fg3m1/games1)*10)/10\r\n  let fg3aPerGame1 = Math.round((fg3a1/games1)*10)/10\r\n  let fg3p1 = Math.round((fg3m1/fg3a1)*1000)/1000\r\n  let ftmPerGame1 = Math.round((ftm1/games1)*10)/10\r\n  let ftaPerGame1 = Math.round((fta1/games1)*10)/10\r\n  let ftp1 = Math.round((ftm1/fta1)*1000)/1000\r\n  let orebPerGame1 = Math.round((oreb1/games1)*10)/10\r\n  let drebPerGame1 = Math.round((dreb1/games1)*10)/10\r\n  let rebPerGame1 = Math.round((reb1/games1)*10)/10\r\n  let astPerGame1 = Math.round((ast1/games1)*10)/10\r\n  let stlPerGame1 = Math.round((stl1/games1)*10)/10\r\n  let blkPerGame1 = Math.round((blk1/games1)*10)/10\r\n  let toPerGame1 = Math.round((turnover1/games1)*10)/10\r\n  let pfPerGame1 = Math.round((pf1/games1)*10)/10\r\n\r\n  let ptsPerGame2 = Math.round((pts2/games2)*10)/10\r\n  let fgmPerGame2 = Math.round((fgm2/games2)*10)/10\r\n  let fgaPerGame2 = Math.round((fga2/games2)*10)/10\r\n  let fgp2 = Math.round((fgm2/fga2)*1000)/1000\r\n  let fg3mPerGame2 = Math.round((fg3m2/games2)*10)/10\r\n  let fg3aPerGame2 = Math.round((fg3a2/games2)*10)/10\r\n  let fg3p2 = Math.round((fg3m2/fg3a2)*1000)/1000\r\n  let ftmPerGame2 = Math.round((ftm2/games2)*10)/10\r\n  let ftaPerGame2 = Math.round((fta2/games2)*10)/10\r\n  let ftp2 = Math.round((ftm2/fta2)*1000)/1000\r\n  let orebPerGame2 = Math.round((oreb2/games2)*10)/10\r\n  let drebPerGame2 = Math.round((dreb2/games2)*10)/10\r\n  let rebPerGame2 = Math.round((reb2/games2)*10)/10\r\n  let astPerGame2 = Math.round((ast2/games2)*10)/10\r\n  let stlPerGame2 = Math.round((stl2/games2)*10)/10\r\n  let blkPerGame2 = Math.round((blk2/games2)*10)/10\r\n  let toPerGame2 = Math.round((turnover2/games2)*10)/10\r\n  let pfPerGame2 = Math.round((pf2/games2)*10)/10\r\n\r\n  return (\r\n    <>\r\n    <h2>Season Averages</h2>\r\n    <table className=\"ui selectable celled table\">\r\n      <tbody>\r\n        <CompareStatRow stat={\"Season\"} stat1={team1roster[0].season.year} stat2={team2roster[0].season.year}/>\r\n        {ptsPerGame1 > ptsPerGame2 ? <CompareStatRow stat={\"PTS\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={ptsPerGame1} stat2={ptsPerGame2}/> : <CompareStatRow stat={\"PTS\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={ptsPerGame1} stat2={ptsPerGame2}/>}\r\n        {fgmPerGame1 > fgmPerGame2 ? <CompareStatRow stat={\"FGM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fgmPerGame1} stat2={fgmPerGame2}/> : <CompareStatRow stat={\"FGM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fgmPerGame1} stat2={fgmPerGame2}/>}\r\n        {fgaPerGame1 > fgaPerGame2 ? <CompareStatRow stat={\"FGA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fgaPerGame1} stat2={fgaPerGame2}/> : <CompareStatRow stat={\"FGA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fgaPerGame1} stat2={fgaPerGame2}/>}\r\n        {fgp1 > fgp2 ? <CompareStatRow stat={\"FG%\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fgp1} stat2={fgp2}/> : <CompareStatRow stat={\"FG%\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fgp1} stat2={fgp2}/>}\r\n        {fg3mPerGame1 > fg3mPerGame2 ? <CompareStatRow stat={\"3PM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fg3mPerGame1} stat2={fg3mPerGame2}/> : <CompareStatRow stat={\"3PM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fg3mPerGame1} stat2={fg3mPerGame2}/>}\r\n        {fg3aPerGame1 > fg3aPerGame2 ? <CompareStatRow stat={\"3PA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fg3aPerGame1} stat2={fg3aPerGame2}/> : <CompareStatRow stat={\"3PA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fg3aPerGame1} stat2={fg3aPerGame2}/>}\r\n        {fg3p1 > fg3p2 ? <CompareStatRow stat={\"3P%\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={fg3p1} stat2={fg3p2}/> : <CompareStatRow stat={\"3P%\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={fg3p1} stat2={fg3p2}/>}\r\n        {ftmPerGame1 > ftmPerGame2 ? <CompareStatRow stat={\"FTM\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={ftmPerGame1} stat2={ftmPerGame2}/> : <CompareStatRow stat={\"FTM\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={ftmPerGame1} stat2={ftmPerGame2}/>}\r\n        {ftaPerGame1 > ftaPerGame2 ? <CompareStatRow stat={\"FTA\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={ftaPerGame1} stat2={ftaPerGame2}/> : <CompareStatRow stat={\"FTA\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={ftaPerGame1} stat2={ftaPerGame2}/>}\r\n        {ftp1 > ftp2 ? <CompareStatRow stat={\"FT%\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={ftp1} stat2={ftp2}/> : <CompareStatRow stat={\"FT%\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={ftp1} stat2={ftp2}/>}\r\n        {orebPerGame1 > orebPerGame2 ? <CompareStatRow stat={\"OREB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={orebPerGame1} stat2={orebPerGame2}/> : <CompareStatRow stat={\"OREB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={orebPerGame1} stat2={orebPerGame2}/>}\r\n        {drebPerGame1 > drebPerGame2 ? <CompareStatRow stat={\"DREB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={drebPerGame1} stat2={drebPerGame2}/> : <CompareStatRow stat={\"DREB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={drebPerGame1} stat2={drebPerGame2}/>}\r\n        {rebPerGame1 > rebPerGame2 ? <CompareStatRow stat={\"REB\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={rebPerGame1} stat2={rebPerGame2}/> : <CompareStatRow stat={\"REB\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={rebPerGame1} stat2={rebPerGame2}/>}\r\n        {astPerGame1 > astPerGame2 ? <CompareStatRow stat={\"AST\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={astPerGame1} stat2={astPerGame2}/> : <CompareStatRow stat={\"AST\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={astPerGame1} stat2={astPerGame2}/>}\r\n        {stlPerGame1 > stlPerGame2 ? <CompareStatRow stat={\"STL\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={stlPerGame1} stat2={stlPerGame2}/> : <CompareStatRow stat={\"STL\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={stlPerGame1} stat2={stlPerGame2}/>}\r\n        {blkPerGame1 > blkPerGame2 ? <CompareStatRow stat={\"BLK\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={blkPerGame1} stat2={blkPerGame2}/> : <CompareStatRow stat={\"BLK\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={blkPerGame1} stat2={blkPerGame2}/>}\r\n        {toPerGame1 > toPerGame2 ? <CompareStatRow stat={\"TO\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={toPerGame1} stat2={toPerGame2}/> : <CompareStatRow stat={\"TO\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={toPerGame1} stat2={toPerGame2}/>}\r\n        {pfPerGame1 > pfPerGame2 ? <CompareStatRow stat={\"PF\"} statclass1={\"positive\"} statclass2={\"negative\"} stat1={pfPerGame1} stat2={pfPerGame2}/> : <CompareStatRow stat={\"PF\"} statclass1={\"negative\"} statclass2={\"positive\"} stat1={pfPerGame1} stat2={pfPerGame2}/>}\r\n      </tbody>\r\n    </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompareTeamAvg;\r\n","import React, { Component } from 'react';\r\nimport CompareTeamBio from '../components/CompareTeamBio'\r\nimport CompareTeamCard from '../components/CompareTeamCard'\r\nimport CompareTeamStats from '../components/CompareTeamStats'\r\nimport CompareTeamAvg from '../components/CompareTeamAvg'\r\n\r\nexport class CompareTeamsContainer extends Component {\r\n\r\n  state = {\r\n    team1: null,\r\n    team1roster: [],\r\n    team2: null,\r\n    team2roster: []\r\n  }\r\n\r\n  setTeam1 = (teamRoster, team) => {\r\n    this.setState({\r\n      team1: team,\r\n      team1roster: teamRoster\r\n    })\r\n  }\r\n\r\n  setTeam2 = (teamRoster, team) => {\r\n    this.setState({\r\n      team2: team,\r\n      team2roster: teamRoster\r\n    })\r\n  }\r\n\r\n  resetTeam1 = () => {\r\n    this.setState({\r\n      team1: null,\r\n      team1roster: []\r\n    })\r\n  }\r\n\r\n  resetTeam2 = () => {\r\n    this.setState({\r\n      team2: null,\r\n      team2roster: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"ui container\">\r\n        <h4 class=\"ui horizontal divider header\">\r\n          <i class=\"sync icon\"></i>\r\n          Compare Team\r\n        </h4>\r\n          <div className=\"ui two column grid\">\r\n              <div className=\"column\">\r\n                  {this.state.team1 ? <CompareTeamBio resetTeam1={this.resetTeam1} team={this.state.team1} roster={this.state.team1roster}/> : <CompareTeamCard setTeam1={this.setTeam1}/>}\r\n              </div>\r\n              <div className=\"column\">\r\n                  {this.state.team2 ? <CompareTeamBio resetTeam2={this.resetTeam2} team={this.state.team2} roster={this.state.team2roster}/> : <CompareTeamCard setTeam2={this.setTeam2}/>} \r\n              </div>\r\n          </div>\r\n          {this.state.team1roster.length === 0 || this.state.team2roster.length === 0 ? null : <CompareTeamAvg team1roster={this.state.team1roster} team2roster={this.state.team2roster}/>}\r\n          {this.state.team1roster.length === 0 || this.state.team2roster.length === 0 ? null : <CompareTeamStats team1roster={this.state.team1roster} team2roster={this.state.team2roster}/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompareTeamsContainer;\r\n","import React, { Component } from 'react';\r\n\r\nexport class SimTeamBio extends Component {\r\n\r\n  handleClick = () => {\r\n    if (this.props.resetTeam1) {\r\n      this.props.resetTeam1()\r\n    } else {\r\n      this.props.resetTeam2()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    let renderRoster = this.props.roster.map(r => <div className=\"item\">{r.player.first_name} {r.player.last_name}</div>)\r\n\r\n    return (\r\n      <div>\r\n        <img src={this.props.team.logo} alt={this.props.team.full_name} style={{\r\n          width: \"100px\",\r\n          height: \"100%\"\r\n        }}/>\r\n        <h2>{this.props.team.full_name}</h2>\r\n        {this.props.roster.length === 0 ? <button onClick={this.handleClick}>Try Another Team</button> : <h3>{this.props.roster[0].season.year}</h3>}\r\n        <div className=\"ui list\">\r\n          {renderRoster}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimTeamBio;\r\n","import React, { Component } from 'react';\r\nimport SimTeamBio from '../components/SimTeamBio'\r\nimport CompareTeamCard from '../components/CompareTeamCard'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { MdBuild } from 'react-icons/md'\r\n\r\nexport class SimulateContainer extends Component {\r\n  \r\n  state = {\r\n    team1: null,\r\n    team1roster: [],\r\n    team2: null,\r\n    team2roster: []\r\n  }\r\n\r\n  setTeam1 = (teamRoster, team) => {\r\n    this.setState({\r\n      team1: team,\r\n      team1roster: teamRoster\r\n    })\r\n  }\r\n\r\n  setTeam2 = (teamRoster, team) => {\r\n    this.setState({\r\n      team2: team,\r\n      team2roster: teamRoster\r\n    })\r\n  }\r\n\r\n  resetTeam1 = () => {\r\n    this.setState({\r\n      team1: null,\r\n      team1roster: []\r\n    })\r\n  }\r\n\r\n  resetTeam2 = () => {\r\n    this.setState({\r\n      team2: null,\r\n      team2roster: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <MdBuild size='25em' />\r\n        <h1 style={{ margin: 35 }}>Under Construction</h1>\r\n        <h4>Currently optimizating the simulation, so that it will run even faster and better than ever before!</h4>\r\n        <h4>Will be back soon!</h4>\r\n        {/* <h4 className=\"ui horizontal divider header\">\r\n          <i className=\"gamepad icon\"></i>\r\n          Simulate\r\n        </h4>\r\n          <div className=\"ui two column grid\">\r\n              <div className=\"column\">\r\n                  {this.state.team1 && this.state.team1roster ? <SimTeamBio resetTeam1={this.resetTeam1} team={this.state.team1} roster={this.state.team1roster}/> : <CompareTeamCard setTeam1={this.setTeam1}/>}\r\n              </div>\r\n              <div className=\"column\">\r\n                  {this.state.team2 && this.state.team2roster ? <SimTeamBio resetTeam2={this.resetTeam2} team={this.state.team2} roster={this.state.team2roster}/> : <CompareTeamCard setTeam2={this.setTeam2}/>} \r\n              </div>\r\n          </div>\r\n          {this.state.team1roster.length !== 0 && this.state.team2roster.length !== 0 ? <NavLink to={\"/simulate/\" + this.state.team1roster[0].season.id + \"/\" + this.state.team2roster[0].season.id}><button className=\"ui inverted orange button\">Start Simulation</button></NavLink> : null} */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SimulateContainer;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui active dimmer\">\r\n        <div className=\"ui text loader\">Simulating Game...</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nconst BoxScoreLine = (props) => {\r\n\r\n  const { stat } = props\r\n  let fga = stat.sim.fg2a + stat.sim.fg3a\r\n  let fgm = stat.sim.fg2m + stat.sim.fg3m\r\n  let pts = (stat.sim.fg2m * 2) + (stat.sim.fg3m * 3) + stat.sim.ftm\r\n  // debugger\r\n  return (\r\n    <tr>\r\n     <td>{stat.player.first_name} {stat.player.last_name}</td>\r\n     <td>{fgm}-{fga}</td>\r\n     <td>{stat.sim.fg3m}-{stat.sim.fg3a}</td>\r\n     <td>{stat.sim.ftm}-{stat.sim.fta}</td>\r\n     <td>{stat.sim.oreb}</td>\r\n     <td>{stat.sim.dreb}</td>\r\n     <td>{stat.sim.ast}</td>\r\n     <td>{stat.sim.stl}</td>\r\n     <td>{stat.sim.blk}</td>\r\n     <td>{stat.sim.to}</td>\r\n     <td>{pts}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default BoxScoreLine;\r\n","import React from 'react';\r\nimport BoxScoreLine from './BoxScoreLine'\r\n\r\nconst TeamBoxScore = (props) => {\r\n\r\n  const { teamStats } = props\r\n\r\n  let renderScoreLine = teamStats.stats.map(stat => <BoxScoreLine stat={stat}/>)\r\n  \r\n  let teamtotal = 0\r\n  let teamfg2a = 0\r\n  let teamfg2m = 0\r\n  let teamfg3a = 0\r\n  let teamfg3m = 0\r\n  let teamfta = 0\r\n  let teamftm = 0\r\n  let teamoreb = 0\r\n  let teamdreb = 0\r\n  let teamast = 0\r\n  let teamstl = 0\r\n  let teamblk = 0\r\n  let teamto = 0\r\n\r\n  teamStats.stats.forEach(stat => {\r\n    teamtotal += stat.sim.fg2m * 2\r\n    teamtotal += stat.sim.fg3m * 3\r\n    teamtotal += stat.sim.ftm\r\n    teamfg2a += stat.sim.fg2a\r\n    teamfg2m += stat.sim.fg2m\r\n    teamfg3a += stat.sim.fg3a\r\n    teamfg3m += stat.sim.fg3m\r\n    teamfta += stat.sim.fta\r\n    teamftm += stat.sim.ftm\r\n    teamoreb += stat.sim.oreb\r\n    teamdreb += stat.sim.dreb\r\n    teamast += stat.sim.ast\r\n    teamstl += stat.sim.stl\r\n    teamblk += stat.sim.blk\r\n    teamto += stat.sim.to\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <h4>{teamStats.year}</h4>\r\n      <h2>{teamStats.team.full_name}</h2>\r\n      <table className=\"ui compact table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Player</th>\r\n            <th>FG</th>\r\n            <th>3PT</th>\r\n            <th>FT</th>\r\n            <th>OREB</th>\r\n            <th>DREB</th>\r\n            <th>AST</th>\r\n            <th>STL</th>\r\n            <th>BLK</th>\r\n            <th>TO</th>\r\n            <th>PTS</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {renderScoreLine}\r\n        </tbody>\r\n        <thead>\r\n          <tr>\r\n            <th>Team</th>\r\n            <th>{teamfg2m + teamfg3m}-{teamfg2a + teamfg3a}</th>\r\n            <th>{teamfg3m}-{teamfg3a}</th>\r\n            <th>{teamftm}-{teamfta}</th>\r\n            <th>{teamoreb}</th>\r\n            <th>{teamdreb}</th>\r\n            <th>{teamast}</th>\r\n            <th>{teamstl}</th>\r\n            <th>{teamblk}</th>\r\n            <th>{teamto}</th>\r\n            <th>{teamtotal}</th>\r\n          </tr>\r\n          <tr>\r\n            <th></th>\r\n            <th>{Math.round((teamfg2m+teamfg3m)/(teamfg2a+teamfg3a) * 1000)/10}%</th>\r\n            <th>{Math.round((teamfg3m/teamfg3a) * 1000)/10}%</th>\r\n            <th>{Math.round((teamftm/teamfta) * 1000)/10}%</th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TeamBoxScore;\r\n","import React, { Component } from 'react';\r\nimport TeamBoxScore from \"./TeamBoxScore\"\r\n\r\nexport class SimBoxScore extends Component {\r\n\r\n  \r\n  render() {\r\n    \r\n    let team1total = 0\r\n    let team2total = 0\r\n  \r\n    this.props.team1.stats.forEach(stat => {\r\n      team1total += stat.sim.fg2m * 2\r\n      team1total += stat.sim.fg3m * 3\r\n      team1total += stat.sim.ftm\r\n    })\r\n\r\n    this.props.team2.stats.forEach(stat => {\r\n      team2total += stat.sim.fg2m * 2\r\n      team2total += stat.sim.fg3m * 3\r\n      team2total += stat.sim.ftm\r\n    })\r\n\r\n    return (\r\n      <>\r\n       <div className=\"ui two statistics\">\r\n        <div className=\"statistic\">\r\n          <div className=\"value\">\r\n            <img src={this.props.team1.team.logo} className=\"ui rounded inline image\" alt={this.props.team1.team.full_name}></img>\r\n            {team1total}\r\n          </div>\r\n          <div>\r\n            {this.props.team1.year} {this.props.team1.team.full_name}\r\n          </div>\r\n        </div>\r\n        <div className=\"statistic\">\r\n          <div className=\"value\">\r\n            <img src={this.props.team2.team.logo} className=\"ui rounded inline image\" alt={this.props.team2.team.full_name}></img>\r\n            {team2total}\r\n          </div>\r\n          <div>\r\n            {this.props.team2.year} {this.props.team2.team.full_name}\r\n          </div>\r\n        </div>\r\n       </div>\r\n       <br></br>\r\n       <TeamBoxScore teamStats={this.props.team1}/>\r\n       <TeamBoxScore teamStats={this.props.team2}/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimBoxScore;\r\n","import React, { Component } from 'react';\r\nimport Loader from '../components/Loader'\r\nimport SimBoxScore from '../components/SimBoxScore'\r\n\r\nexport class SimResultContainer extends Component {\r\n\r\n  state = {\r\n    team1: null,\r\n    team2: null,\r\n    loaded: false\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try {\r\n      const res = await fetch(`https://nba-showdown.herokuapp.com/seasons/${this.props.season1}/${this.props.season2}`)\r\n      if (!res.ok) {\r\n        throw Error(res.statusText)\r\n      } else {\r\n        const json = await res.json()\r\n        this.setState({\r\n          loaded: true,\r\n          team1: json.team1,\r\n          team2: json.team2\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loaded ? <SimBoxScore team1={this.state.team1} team2={this.state.team2} />: <Loader />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimResultContainer;\r\n","import React, { Component } from 'react';\r\nimport TeamListItem from '../components/TeamListItem'\r\n\r\nexport class ShowTeams extends Component {\r\n\r\n  render() {\r\n\r\n    let east = this.props.teams.filter(team => team.conference === \"East\")\r\n    let west = this.props.teams.filter(team => team.conference === \"West\")\r\n    let renderEast = east.map(team => <TeamListItem key={team.id} team={team} />)\r\n    let renderWest = west.map(team => <TeamListItem key={team.id} team={team} />)\r\n\r\n    return (\r\n      <div className=\"ui two column grid\">\r\n        <div className=\"row\">\r\n          <div className=\"column\">\r\n            <div className=\"ui middle aligned list\">\r\n              <h2>Eastern Conference</h2>\r\n              {renderEast}\r\n            </div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"ui middle aligned list\">\r\n              <h2>Western Conference</h2>\r\n              {renderWest}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowTeams;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport IndexContainer from './IndexContainer'\r\nimport PlayerShowContainer from './PlayerShowContainer'\r\nimport CompareContainer from './CompareContainer'\r\nimport HomeContainer from './HomeContainer'\r\nimport TeamRosterContainer from './TeamRosterContainer'\r\nimport PlayersContainer from './PlayersContainer'\r\nimport CompareTeamsContainer from './CompareTeamsContainer'\r\nimport SimulateContainer from './SimulateContainer'\r\nimport SimResultContainer from './SimResultContainer'\r\nimport ShowTeams from './ShowTeams'\r\n\r\nexport class MainContainer extends Component {\r\n\r\n    state = {\r\n        loaded: false,\r\n        rosterStats: []\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <HomeContainer />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/players\" >\r\n                        <PlayersContainer players={this.state.players}/>\r\n                        {/* <PlayersContainer players={this.state.players}/> */}\r\n                    </Route>\r\n\r\n                    {/* To render a Player Show page */}\r\n                    <Route exact path=\"/players/:id\" >\r\n                        {this.renderPlayer}\r\n                    </Route>\r\n\r\n                    {/* To render a list of all Teams */}\r\n                    <Route exact path=\"/teams\" >\r\n                        <ShowTeams teams={this.props.teams}/>\r\n                    </Route>\r\n                    \r\n                    {/* To render a list of all seasons by a single team */}\r\n                    <Route exact path=\"/teams/:id\" >\r\n                        {this.renderTeamYears}\r\n                    </Route>\r\n\r\n                    {/* To render the roster of a specifc Team + Season */}\r\n                    <Route exact path=\"/teams/:id/:season\" >\r\n                        {this.renderTeamRoster}\r\n                    </Route>\r\n\r\n                    {/* To render the compare Players/Teams page */}\r\n                    <Route exact path=\"/compareplayers\" >\r\n                        <CompareContainer />\r\n                    </Route>\r\n\r\n                    {/* To render the compare Teams page */}\r\n                    <Route exact path=\"/compareteams\" >\r\n                        <CompareTeamsContainer />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/simulate\">\r\n                        <SimulateContainer />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/simulate/:teamone/:teamtwo\">\r\n                        {this.renderSimResults}\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderSimResults = (renderParams) => {\r\n        const season1id = parseInt(renderParams.match.params.teamone)\r\n        const season2id = parseInt(renderParams.match.params.teamtwo)\r\n        return <SimResultContainer season1={season1id} season2={season2id} />\r\n    }\r\n\r\n    renderTeamYears = (renderParams) => {\r\n        const id = parseInt(renderParams.match.params.id)\r\n        let team = this.props.teams.find(team => team.id === id)\r\n        return <IndexContainer team={team} />\r\n    }\r\n\r\n    renderPlayer = (renderParams) => {\r\n        const id = parseInt(renderParams.match.params.id)\r\n        return <PlayerShowContainer playerId={ id } />\r\n    } \r\n\r\n    renderTeamRoster = (renderParams) => {\r\n        const teamId = parseInt(renderParams.match.params.id)\r\n        const seasonId = parseInt(renderParams.match.params.season)\r\n        return <TeamRosterContainer teamId={teamId} seasonId={seasonId}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { teams: state.teams }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainContainer);\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport class NavBar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container ui\">\r\n                <div className=\"ui top menu navbar\" >\r\n                    <NavLink exact to=\"/\" className=\"item navbar-item\">\r\n                        Home\r\n                    </NavLink>\r\n                    <NavLink to=\"/players\" className=\"item navbar-item\">\r\n                        Players\r\n                    </NavLink>\r\n                    <NavLink to=\"/teams\" className=\"item navbar-item\">\r\n                        Teams\r\n                    </NavLink>\r\n                    <div className=\"right menu\">\r\n                        <NavLink to=\"/compareplayers\" className=\"ui item navbar-item\">\r\n                            Compare Players\r\n                        </NavLink>\r\n                        <NavLink to=\"/compareteams\" className=\"ui item navbar-item\">\r\n                            Compare Teams\r\n                        </NavLink>\r\n                        <NavLink to=\"/simulate\" className=\"ui item navbar-item\">\r\n                            Simulate Game\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n\r\n","import React, { Component } from 'react';\r\nimport NavBar from '../components/NavBar'\r\n\r\nexport class NavContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                <NavBar />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavContainer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MainContainer from \"./containers/MainContainer\"\r\nimport NavContainer from \"./containers/NavContainer\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { connect } from 'react-redux'\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    loaded: false\r\n  }\r\n\r\n  componentDidMount = async() => {\r\n    let rawData = await fetch('https://nba-showdown.herokuapp.com/teams')\r\n    let teams = await rawData.json()\r\n    this.props.populateTeams(teams)\r\n    let moreData = await fetch('https://nba-showdown.herokuapp.com/players')\r\n    let players = await moreData.json()\r\n    this.props.populatePlayers(players)\r\n    this.setState({\r\n      loaded: true\r\n    })\r\n}\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <NavContainer />\r\n        <div className=\"ui hidden divider middle aligned\"></div>\r\n        <div className=\"ui container center aligned\">\r\n          {this.state.loaded ? <MainContainer/> : <Spinner animation=\"grow\" variant=\"primary\"/>}\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    populatePlayers: (players) => {\r\n      dispatch({\r\n        type: \"POPULATE_PLAYERS\",\r\n        players: players\r\n      })\r\n    },\r\n    populateTeams: (teams) => {\r\n      dispatch({\r\n        type: \"POPULATE_TEAMS\",\r\n        teams: teams\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n  teams: [],\r\n  players: [],\r\n  seasons: []\r\n}\r\n\r\nconst reducer = (oldState = initialState, action) => {\r\n  switch(action.type) {\r\n    case \"POPULATE_PLAYERS\":\r\n      return {\r\n        ...oldState,\r\n        players: action.players \r\n      };\r\n    case \"POPULATE_TEAMS\":\r\n      return {\r\n        ...oldState,\r\n        teams: action.teams \r\n      };\r\n    case \"POPULATE_SEASONS\":\r\n      return {\r\n        ...oldState,\r\n        seasons: action.seasons\r\n      }; \r\n  }\r\n}\r\n\r\nexport default reducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from './reducers/reducer'\r\n\r\nconst store = createStore(reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                  <HashRouter basename='/'>\r\n                    <App />\r\n                  </HashRouter>\r\n                </Provider>,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}